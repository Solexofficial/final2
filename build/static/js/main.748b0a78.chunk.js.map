{"version":3,"sources":["components/shared-components/Loading/index.js","redux/actions/Clients.js","components/shared-components/Flex/index.js","configs/AppConfig.js","configs/EnvironmentConfig.js","redux/constants/Auth.js","constants/ThemeConstant.js","redux/reducers/Auth.js","redux/reducers/Clients.js","redux/constants/Theme.js","redux/reducers/Theme.js","redux/reducers/index.js","configs/FirebaseConfig.js","auth/FirebaseAuth.js","services/FirebaseService.js","redux/sagas/Auth.js","services/ClientsService.js","redux/sagas/Clients.js","redux/sagas/index.js","redux/store/index.js","components/util-components/IntlMessage/index.js","components/util-components/Icon/index.js","configs/NavigationConfig.js","utils/index.js","redux/actions/Theme.js","components/layout-components/MenuContent.js","components/layout-components/SideNav.js","components/layout-components/TopNav.js","components/layout-components/Logo.js","components/layout-components/MobileNav.js","components/shared-components/ColorPicker/index.js","components/layout-components/NavLanguage.js","components/layout-components/ThemeConfigurator.js","components/layout-components/NavPanel.js","components/layout-components/NavSearch/SearchInput.js","components/layout-components/NavSearch/index.js","components/layout-components/HeaderNav.js","components/layout-components/AppBreadcrumb.js","components/layout-components/PageHeader.js","components/layout-components/Footer.js","views/app-views/index.js","layouts/app-layout/index.js","views/auth-views/index.js","layouts/auth-layout/index.js","lang/entries/en_US.js","lang/entries/zh_CN.js","lang/entries/fr_FR.js","lang/index.js","lang/entries/ja_JP.js","views/index.js","App.js","serviceWorker.js","index.js","redux/actions/Auth.js","redux/constants/Clients.js"],"names":["Icon","style","fontSize","spin","Loading","props","align","cover","className","indicator","defaultProps","setClients","clients","type","CLIENTS_RECEIVED","payload","updateClient","client","CLIENT_UPDATED","fetchingClients","CLIENTS_REQUESTED","clientsRequestFailed","errorMessage","CLIENTS_REQUESTED_FAILED","error","deleteClient","clientId","CLIENT_DELETED","Flex","children","alignItems","justifyContent","mobileFlex","flexDirection","APP_NAME","API_BASE_URL","API_ENDPOINT_URL","APP_PREFIX_PATH","AUTH_PREFIX_PATH","THEME_CONFIG","navCollapsed","sideNavTheme","SIDE_NAV_LIGHT","locale","navType","NAV_TYPE_SIDE","topNavColor","headerNavColor","mobileNav","currentTheme","SIGNIN","AUTHENTICATED","SIGNOUT","SIGNOUT_SUCCESS","SIGNUP","SIGNUP_SUCCESS","SHOW_AUTH_MESSAGE","HIDE_AUTH_MESSAGE","SHOW_LOADING","AUTH_TOKEN","SIGNIN_WITH_GOOGLE","SIGNIN_WITH_GOOGLE_AUTHENTICATED","SIGNIN_WITH_FACEBOOK","SIGNIN_WITH_FACEBOOK_AUTHENTICATED","ROW_GUTTER","SIDE_NAV_WIDTH","SIDE_NAV_COLLAPSED_WIDTH","SIDE_NAV_DARK","NAV_TYPE_TOP","initState","loading","message","showMessage","redirect","token","localStorage","getItem","auth","state","action","entities","isLoading","id","map","filter","TOGGLE_COLLAPSED_NAV","CHANGE_LOCALE","SIDE_NAV_STYLE_CHANGE","NAV_TYPE_CHANGE","TOP_NAV_COLOR_CHANGE","HEADER_NAV_COLOR_CHANGE","TOGGLE_MOBILE_NAV","SWITCH_THEME","initTheme","theme","reducers","combineReducers","Theme","Auth","Clients","FirebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","firebaseConfig","firestore","googleAuthProvider","currentUser","GoogleAuthProvider","facebookAuthProvider","FacebookAuthProvider","FirebaseService","TwitterAuthProvider","GithubAuthProvider","signInEmailRequest","email","password","a","signInWithEmailAndPassword","then","user","catch","err","signOutRequest","signOut","signInGoogleRequest","signInWithPopup","signInFacebookRequest","signUpEmailRequest","createUserWithEmailAndPassword","signInWithFBEmail","signUpWithFBEmail","signInWithFBGoogle","signInWithFacebook","rootSaga","takeEvery","call","put","showAuthMessage","setItem","uid","authenticated","undefined","signOutUser","removeItem","signOutSuccess","signUpSuccess","signInWithGoogleAuthenticated","signInWithFacebookAuthenticated","all","fork","ClientService","getAll","fetch","response","json","data","getClients","getState","sagaMiddleware","createSagaMiddleware","middlewares","store","preloadedState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","configureStore","injectIntl","withRef","this","React","createElement","Component","dashBoardNavTree","key","path","title","icon","DashboardOutlined","breadcrumb","submenu","extraNavTree","UserOutlined","appsNavTree","AppstoreOutlined","navigationConfig","Utils","name","initials","match","shift","pop","toUpperCase","navTree","route","p","hasOwnProperty","getRouteInfo","hex","cutHex","h","charAt","substring","parseInt","hexToG","hexToB","color","percent","R","G","B","RR","toString","length","GG","BB","rgba","trim","str","replace","inParts","indexOf","split","r","g","b","parseFloat","toFixed","outParts","Math","round","forEach","part","i","join","number","positive","negative","toLowerCase","list","value","item","input","searchText","screens","breakpoints","push","toggleCollapsedNav","onMobileNavToggle","SubMenu","Menu","useBreakpoint","Grid","setLocale","isLocaleOn","localeKey","setDefaultOpen","keyList","keyString","arr","index","elm","SideNavContent","routeInfo","hideGroupTitle","localization","isMobile","utils","getBreakPoint","includes","closeMobileNav","mode","height","borderRight","defaultSelectedKeys","defaultOpenKeys","menu","ItemGroup","subMenuFirst","subMenuSecond","Item","onClick","to","TopNavContent","backgroundColor","popupClassName","connect","Sider","Layout","width","collapsed","autoHide","getColorContrast","getLogoWidthGutter","isNavTop","mobileLogo","getLogo","logoType","getLogoDisplay","src","alt","onClose","placement","closable","visible","bodyStyle","padding","ArrowLeftOutlined","ColorPicker","colorChange","useState","setVisible","pickerColor","setPickerColor","boxColor","setBoxColor","useEffect","onPickerDropdown","onChange","rgb","SelectedLanguage","language","lang","langId","getLanguageDetail","langName","maxWidth","DownOutlined","onLocaleChange","configDisplay","languageOption","CheckOutlined","overlay","trigger","href","e","preventDefault","GlobalOutlined","colorOptions","ListOption","selector","disabled","vertical","mapDispatchToProps","onNavTypeChange","onNavStyleChange","onTopNavColorChange","onHeaderNavColorChange","onSwitchTheme","configState","isCollapse","useThemeSwitcher","switcher","themes","rgbaToHex","Group","size","target","Button","checked","isChecked","changedTheme","text","JSON","stringify","onCopy","success","CopyOutlined","block","NavPanel","showDrawer","setState","SettingOutlined","optionList","getOptionList","navigationTree","optionTree","navItem","getCategoryIcon","category","AntDesignOutlined","FileTextOutlined","SearchInput","active","close","setValue","options","setOptions","inputRef","useRef","current","focus","ref","dropdownClassName","onSelect","onSearch","label","filterOption","inputValue","option","placeholder","prefix","SearchOutlined","CloseOutlined","Header","searchActive","setSearchActive","onSearchClose","navMode","MenuUnfoldOutlined","MenuFoldOutlined","breadcrumbData","assignBreadcrumb","obj","BreadcrumbRoute","withRouter","pathSnippets","location","pathname","buildBreadcrumb","_","url","slice","AppBreadcrumb","PageHeader","display","Footer","Date","getFullYear","AppViews","fallback","component","lazy","from","memo","Content","AppLayout","currentRouteInfo","isNavSide","status","paddingLeft","AuthLayout","AuthViews","EnLang","antd","antdEnUS","messages","enMsg","ZhLang","antdZhCn","zhMsg","FrLang","antdFrFR","frMsg","AppLocale","en","enLang","zh","zhLang","fr","frLang","ja","antdJaJP","jaMsg","currentAppLocale","exact","dark","process","light","App","themeMap","defaultTheme","insertionPoint","Views","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","hideAuthMessage","showLoading"],"mappings":"qIAKMA,EAAO,cAAC,IAAD,CAAiBC,MAAO,CAAEC,SAAU,IAAMC,MAAI,IAErDC,EAAU,SAACC,GAAW,IACnBC,EAAiBD,EAAjBC,MAAOC,EAAUF,EAAVE,MACf,OACC,qBAAKC,UAAS,uBAAkBF,EAAlB,kBAAiCC,GAA/C,SACC,cAAC,IAAD,CAAME,UAAWT,OAUpBI,EAAQM,aAAe,CACtBJ,MAAO,SACPC,MAAO,UAGOH,O,iCC1Bf,sLAQaO,EAAa,SAAAC,GACxB,MAAO,CACLC,KAAMC,IACNC,QAASH,IAGAI,EAAe,SAAAC,GAC1B,MAAO,CACLJ,KAAMK,IACNH,QAASE,IAGAE,EAAkB,WAC7B,MAAO,CACLN,KAAMO,MAGGC,EAAuB,SAAAC,GAClC,MAAO,CACLT,KAAMU,IACNC,MAAOF,IAGEG,EAAe,SAAAC,GAC1B,MAAO,CACLb,KAAMc,IACNZ,QAASW,K,4CC/BPE,G,KAAO,SAAAvB,GAAU,IACdwB,EAA+ExB,EAA/EwB,SAAUrB,EAAqEH,EAArEG,UAAWsB,EAA0DzB,EAA1DyB,WAAYC,EAA8C1B,EAA9C0B,eAAgBC,EAA8B3B,EAA9B2B,WAAYC,EAAkB5B,EAAlB4B,cAErE,OACC,qBAAKzB,UAAS,UAFiBwB,EAAa,SAAW,YAEzC,YAA4BxB,EAA5B,YAAyCyB,EAAe,QAAUA,EAAgB,GAAlF,YAAwFH,EAAY,eAAiBA,EAAY,GAAjI,YAAuIC,EAAgB,mBAAqBA,EAAgB,IAA1M,SACEF,MAaJD,EAAKlB,aAAe,CACnBsB,YAAY,EACZC,cAAe,MACfzB,UAAW,IAIGoB,O,kwuBCzBFM,EAAW,SACXC,ECAA,CACXC,iBAAkB,wBDDYA,iBACnBC,EAAkB,OAClBC,EAAmB,QAEnBC,EAAe,CAC3BC,cAAc,EACdC,aAAcC,IACdC,OAAQ,KACRC,QAASC,IACTC,YAAa,UACbC,eAAgB,GAChBC,WAAW,EACXC,aAAc,U,gCEhBf,4dAAO,IAAMC,EAAS,SACTC,EAAgB,gBAChBC,EAAU,UACVC,EAAkB,kBAClBC,EAAS,SACTC,EAAiB,iBACjBC,EAAoB,oBACpBC,EAAoB,oBACpBC,EAAe,eACfC,EAAa,aACbC,EAAqB,qBACrBC,EAAmC,mCACnCC,EAAuB,uBACvBC,EAAqC,sC,gCCblD,8OAAO,IAAMC,EAAa,GACbC,EAAiB,IACjBC,EAA2B,GAC3BxB,EAAiB,iBACjByB,EAAgB,gBAChBtB,EAAgB,OAChBuB,EAAe,O,2KCMtBC,EAAY,CAChBC,SAAS,EACTC,QAAS,GACTC,aAAa,EACbC,SAAU,GACVC,MAAOC,aAAaC,QAAQjB,MAiEfkB,EA9DF,WAAgC,IAA/BC,EAA8B,uDAAtBT,EAAWU,EAAW,uCAC3C,OAAQA,EAAOlE,MACd,KAAKsC,IACJ,OAAO,2BACH2B,GADJ,IAECR,SAAS,EACTG,SAAU,IACVC,MAAOK,EAAOL,QAEhB,KAAKlB,IACJ,OAAO,2BACHsB,GADJ,IAECP,QAASQ,EAAOR,QAChBC,aAAa,EACbF,SAAS,IAEX,KAAKb,IACJ,OAAO,2BACHqB,GADJ,IAECP,QAAS,GACTC,aAAa,IAEf,KAAKnB,IACJ,OAAO,2BACHyB,GADJ,IAECJ,MAAO,KACPD,SAAU,IACVH,SAAS,IAGX,KAAKf,IACJ,OAAO,2BACFuB,GADL,IAEER,SAAS,EACTI,MAAOK,EAAOL,QAGjB,KAAKhB,IACJ,OAAO,2BACHoB,GADJ,IAECR,SAAS,IAGX,KAAKT,IAOL,KAAKE,IACJ,OAAO,2BACHe,GADJ,IAECR,SAAS,EACTI,MAAOK,EAAOL,QAGhB,QACC,OAAOI,I,iBC5EJT,EAAY,CAChBW,SAAU,GACVC,WAAW,EACXzD,MAAO,MAsCMZ,EAnCC,WAAgC,IAA/BkE,EAA8B,uDAAtBT,EAAWU,EAAW,uCAC7C,OAAQA,EAAOlE,MACb,KAAKC,IACH,OAAO,2BACFgE,GADL,IAEEG,WAAW,EACXD,SAAS,YAAKD,EAAOhE,WAGzB,KAAKG,IAAiB,IACZgE,EAAOH,EAAOhE,QAAdmE,GACR,OAAO,2BACFJ,GADL,IAEEE,SAAUF,EAAME,SAASG,KAAI,SAAAlE,GAAM,OAAKA,EAAOiE,KAAOA,EAAKH,EAAOhE,QAAUE,OAGhF,KAAKU,IACH,OAAO,2BACFmD,GADL,IAEEE,SAAUF,EAAME,SAASI,QAAO,SAAAnE,GAAM,OAAIA,EAAOiE,KAAOH,EAAOhE,aAGnE,KAAKQ,IACH,OAAO,2BACFuD,GADL,IAEEtD,MAAOuD,EAAOvD,MACdyD,WAAW,IAIf,QACE,OAAOH,ICvCAO,EAAuB,uBACvBC,EAAgB,gBAChBC,EAAwB,wBACxBC,EAAkB,kBAClBC,EAAuB,uBACvBC,EAA0B,0BAC1BC,EAAoB,oBACpBC,EAAe,eCKtBC,EAAS,eACVtD,KAkDUuD,EA/CD,WAAgC,IAA/BhB,EAA8B,uDAAtBe,EAAWd,EAAW,uCAC3C,OAAQA,EAAOlE,MACb,KAAKwE,EACH,OAAO,2BACFP,GADL,IAEEtC,aAAcuC,EAAOvC,eAEzB,KAAK+C,EACH,OAAO,2BACFT,GADL,IAEErC,aAAcsC,EAAOtC,eAEzB,KAAK6C,EACH,OAAO,2BACFR,GADL,IAEEnC,OAAQoC,EAAOpC,SAEnB,KAAK6C,EACH,OAAO,2BACFV,GADL,IAEElC,QAASmC,EAAOnC,UAEpB,KAAK6C,EACH,OAAO,2BACFX,GADL,IAEEhC,YAAaiC,EAAOjC,cAExB,KAAK4C,EACH,OAAO,2BACFZ,GADL,IAEE/B,eAAgBgC,EAAOhC,iBAE3B,KAAK4C,EACH,OAAO,2BACFb,GADL,IAEE9B,UAAW+B,EAAO/B,YAEtB,KAAK4C,EACH,OAAO,2BACFd,GADL,IAEE7B,aAAc8B,EAAO9B,eAEzB,QACE,OAAO6B,IChDEiB,EANEC,YAAgB,CAC/BF,MAAOG,EACPpB,KAAMqB,EACNtF,QAASuF,I,0DCGIC,G,cAXQ,CACrBC,OAAQ,0CACRC,WAAY,yBACZC,YAAa,gCACbC,UAAW,SACXC,cAAe,qBACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBCHjBC,IAASC,cAAcC,GAGZF,IAASG,YAApB,IACMnC,EAAOgC,IAAShC,OAEhBoC,GADcpC,EAAKqC,YACE,IAAIL,IAAShC,KAAKsC,oBACvCC,EAAuB,IAAIP,IAAShC,KAAKwC,qBCVzCC,GDWsB,IAAIT,IAAShC,KAAK0C,oBACnB,IAAIV,IAAShC,KAAK2C,mBCZrB,IAExBF,EAAgBG,mBAAhB,uCAAqC,WAAOC,EAAOC,GAAd,SAAAC,EAAA,sEAC9B/C,EAAKgD,2BAA2BH,EAAOC,GAAUG,MAAK,SAAAC,GAAI,OAAIA,KAAMC,OAAM,SAAAC,GAAG,OAAIA,KADnD,mFAArC,wDAGAX,EAAgBG,mBAAhB,uCAAqC,WAAOC,EAAOC,GAAd,SAAAC,EAAA,sEAC7B/C,EAAKgD,2BAA2BH,EAAOC,GAAUG,MAAK,SAAAC,GAAI,OAAIA,KAAMC,OAAM,SAAAC,GAAG,OAAIA,KADpD,mFAArC,wDAGAX,EAAgBY,eAAhB,sBAAiC,sBAAAN,EAAA,sEAC1B/C,EAAKsD,UAAUL,MAAK,SAAAC,GAAI,OAAIA,KAAMC,OAAM,SAAAC,GAAG,OAAIA,KADrB,mFAGjCX,EAAgBc,oBAAhB,sBAAsC,sBAAAR,EAAA,sEAC9B/C,EAAKwD,gBAAgBpB,GAAoBa,MAAK,SAAAC,GAAI,OAAIA,KAAMC,OAAM,SAAAC,GAAG,OAAIA,KAD3C,mFAGtCX,EAAgBgB,sBAAhB,sBAAwC,sBAAAV,EAAA,sEAChC/C,EAAKwD,gBAAgBjB,GAAsBU,MAAK,SAAAC,GAAI,OAAIA,KAAMC,OAAM,SAAAC,GAAG,OAAIA,KAD3C,mFAGxCX,EAAgBiB,mBAAhB,uCAAqC,WAAOb,EAAOC,GAAd,SAAAC,EAAA,sEAC9B/C,EAAK2D,+BAA+Bd,EAAOC,GAAUG,MAAK,SAAAC,GAAI,OAAIA,KAAMC,OAAM,SAAAC,GAAG,OAAIA,KADvD,mFAArC,wDAGeX,Q,WCFEmB,G,WAiBAN,G,WAgBAO,I,WAkBAC,I,WAgBAC,I,WAgBQC,IAnFlB,SAAUJ,IAAV,iEACL,OADK,SACCK,YAAU5F,IAAD,UAAS,2FAGV,OAHsBnC,EAAZ,EAAYA,QAC7B2G,EAAmB3G,EAAnB2G,MAAOC,EAAY5G,EAAZ4G,SADU,kBAGJoB,YAAKzB,EAAgBG,mBAAoBC,EAAOC,GAH5C,YAGjBI,EAHiB,QAIdxD,QAJc,iBAKtB,OALsB,SAKhByE,YAAIC,YAAgBlB,EAAKxD,UALT,+BAQtB,OADAI,aAAauE,QAAQvF,IAAYoE,EAAKA,KAAKoB,KAPrB,UAQhBH,YAAII,YAAcrB,EAAKA,KAAKoB,MARZ,gCAWvB,OAXuB,oCAWjBH,YAAIC,YAAgB,EAAD,KAXF,0DADnB,uCAiBA,SAAUd,IAAV,iEACL,OADK,SACCW,YAAU1F,IAAD,UAAU,oFAEJ,OAFI,kBAEE2F,YAAKzB,EAAgBY,gBAFvB,eAGJmB,KADdC,EAFkB,yBAKvB,OADA3E,aAAa4E,WAAW5F,KAJD,SAKjBqF,YAAIQ,YAAeF,IALF,+BAOvB,OAPuB,UAOjBN,YAAIC,YAAgBK,EAAY/E,UAPf,gCAUxB,OAVwB,oCAUlByE,YAAIC,YAAgB,EAAD,KAVD,0DADpB,uCAgBA,SAAUP,KAAV,iEACL,OADK,SACCI,YAAUxF,IAAD,UAAS,2FAGV,OAHsBvC,EAAZ,EAAYA,QAC7B2G,EAAmB3G,EAAnB2G,MAAOC,EAAY5G,EAAZ4G,SADU,kBAGJoB,YAAKzB,EAAgBiB,mBAAoBb,EAAOC,GAH5C,YAGjBI,EAHiB,QAIdxD,QAJc,iBAKtB,OALsB,SAKhByE,YAAIC,YAAgBlB,EAAKxD,UALT,+BAQtB,OADAI,aAAauE,QAAQvF,IAAYoE,EAAKA,KAAKoB,KAPrB,UAQhBH,YAAIS,YAAc1B,EAAKA,KAAKoB,MARZ,gCAWvB,OAXuB,oCAWjBH,YAAIC,YAAgB,EAAD,KAXF,0DADnB,uCAkBA,SAAUN,KAAV,iEACL,OADK,SACCG,YAAUlF,IAAD,UAAqB,oFAEtB,OAFsB,kBAEhBmF,YAAKzB,EAAgBc,qBAFL,YAE7BL,EAF6B,QAG1BxD,QAH0B,gBAIlC,OAJkC,SAI5ByE,YAAIC,YAAgBlB,EAAKxD,UAJG,8BAOlC,OADAI,aAAauE,QAAQvF,IAAYoE,EAAKA,KAAKoB,KANT,UAO5BH,YAAIU,YAA8B3B,EAAKA,KAAKoB,MAPhB,gCAUnC,OAVmC,oCAU7BH,YAAIC,YAAgB,EAAD,KAVU,0DAD/B,uCAgBA,SAAUL,KAAV,iEACL,OADK,SACCE,YAAUhF,IAAD,UAAuB,oFAExB,OAFwB,kBAElBiF,YAAKzB,EAAgBgB,uBAFH,YAE/BP,EAF+B,QAG5BxD,QAH4B,gBAIpC,OAJoC,SAI9ByE,YAAIC,YAAgBlB,EAAKxD,UAJK,8BAOpC,OADAI,aAAauE,QAAQvF,IAAYoE,EAAKA,KAAKoB,KANP,UAO9BH,YAAIW,YAAgC5B,EAAKA,KAAKoB,MAPhB,gCAUrC,OAVqC,oCAU/BH,YAAIC,YAAgB,EAAD,KAVY,0DADjC,uCAgBQ,SAAUJ,KAAV,iEACb,OADa,SACPe,YAAI,CACVC,YAAKpB,GACLoB,YAAK1B,GACL0B,YAAKnB,IACLmB,YAAKlB,IACLkB,YAAKjB,MANQ,uCCrGf,IAWekB,GATO,CACpBC,OAAO,WAAD,4BAAE,8BAAAnC,EAAA,sEAEiBoC,MALH,8CAGd,cAEAC,EAFA,gBAGaA,EAASC,OAHtB,cAGAC,EAHA,yBAICA,GAJD,2CAAF,kDAAC,I,sBCAQC,I,YAaQvB,IAblB,SAAUuB,KAAV,iEACL,OADK,SACCtB,YAAU1H,IAAD,UAAoB,oFAEf,OAFe,kBAET2H,YAAKe,GAAcC,QAFV,YAEzBnJ,EAFyB,wBAI7B,OAJ6B,SAIvBoI,YAAIrI,aAAWC,IAJQ,8BAO/B,OAP+B,mCAOzBoI,YAAI3H,aAAqB,KAAIkD,UAPJ,yDAD9B,wCAaQ,SAAUsE,KAAV,iEACb,OADa,SACPe,YAAI,CAACC,YAAKO,MADH,wC,gBCdUvB,IAAV,SAAUA,GAASwB,GAAnB,iEACb,OADa,SACPT,YAAI,CAAC1D,KAAQC,OADN,wCCCf,IAAMmE,GAAiBC,cAEjBC,GAAc,CAACF,IAqBrB,IAEeG,GArBf,SAAwBC,GAEtB,IAAMC,EAAmBC,OAAOC,sCAAwCC,IAClEL,EAAQM,YAAYhF,EAAU2E,EAAgBC,EAClDK,IAAe,WAAf,EAAmBR,MAYrB,OATAF,GAAeW,IAAIpC,IASZ4B,EAGKS,G,qECxBCC,iBADK,SAAA9K,GAAK,OAAI,cAAC,KAAD,eAAsBA,MACZ,CACrC+K,SAAS,I,sCCMIpL,GATf,2KACW,IAAD,EACqBqL,KAAKhL,MAA1BQ,EADA,EACAA,KAAML,EADN,EACMA,UACd,OACC,mCAAG8K,IAAMC,cAAc1K,EAAM,CAAEL,UAAWA,UAJ7C,GAA0BgL,a,8BCCpBC,GAAmB,CACvB,CACEC,IAAK,OACLC,KAAK,GAAD,OAAKtJ,IAAL,SACJuJ,MAAO,OACPC,KAAMC,KACNC,YAAY,EACZC,QAAS,KAIPC,GAAe,CACnB,CACEP,IAAK,QACLC,KAAK,GAAD,OAAKtJ,IAAL,UACJuJ,MAAO,gBACPC,KAAM,GACNE,YAAY,EACZC,QAAS,CACP,CACEN,IAAK,cACLC,KAAK,GAAD,OAAKtJ,IAAL,UACJuJ,MAAO,UACPC,KAAMK,KACNH,YAAY,EACZC,QAAS,CACP,CACEN,IAAK,mBACLC,KAAK,GAAD,OAAKtJ,IAAL,sBACJuJ,MAAO,eACPC,KAAM,GACNE,YAAY,EACZC,QAAS,SAQfG,GAAc,CAClB,CACET,IAAK,OACLC,KAAK,GAAD,OAAKtJ,IAAL,SACJuJ,MAAO,eACPG,YAAY,EACZC,QAAS,CACP,CACEN,IAAK,iBACLC,KAAK,GAAD,OAAKtJ,IAAL,mBACJuJ,MAAO,YACPC,KAAMO,KACNL,YAAY,EACZC,QAAS,OAQFK,GAFO,UAAOZ,GAAqBQ,GAAiBE,ICyJpDG,G,8GAhNQC,GACrB,IAAIC,EAAWD,EAAKE,MAAM,UAAY,GACtC,QAASD,EAASE,SAAW,KAAOF,EAASG,OAAS,KAAKC,gB,mCASxCC,EAASlB,GAC5B,GAAIkB,EAAQlB,OAASA,EACnB,OAAOkB,EAET,IAAIC,EACJ,IAAK,IAAIC,KAAKF,EACZ,GAAIA,EAAQG,eAAeD,IAA4B,kBAAfF,EAAQE,KAChDD,EAAQzB,KAAK4B,aAAaJ,EAAQE,GAAIpB,IAErC,OAAOmB,EAIV,OAAOA,I,uCAQgBI,GACvB,IAAIA,EACH,MAAO,OASR,SAASC,EAAOC,GAAI,MAAwB,MAAhBA,EAAEC,OAAO,GAAcD,EAAEE,UAAU,EAAE,GAAGF,EAEpE,OAD6B,IAJFG,SAAUJ,EAHjBD,GAG4BI,UAAU,EAAE,GAAG,IAIjB,IAH9C,SAAgBF,GAAI,OAAOG,SAAUJ,EAAOC,GAAIE,UAAU,EAAE,GAAG,IAHhDE,CAAON,GAMwC,IAF9D,SAAgBE,GAAI,OAAOG,SAAUJ,EAAOC,GAAIE,UAAU,EAAE,GAAG,IAHjDG,CAAOP,IAKiD,IARpD,IAUV,OAEA,U,iCAUSQ,EAAOC,GACxB,IAAIC,EAAIL,SAASG,EAAMJ,UAAU,EAAE,GAAG,IAClCO,EAAIN,SAASG,EAAMJ,UAAU,EAAE,GAAG,IAClCQ,EAAIP,SAASG,EAAMJ,UAAU,EAAE,GAAG,IACtCM,EAAIL,SAASK,GAAK,IAAMD,GAAW,KAInCE,GAHAA,EAAIN,SAASM,GAAK,IAAMF,GAAW,MAG5B,IAAKE,EAAE,IACdC,GAHAA,EAAIP,SAASO,GAAK,IAAMH,GAAW,MAG5B,IAAKG,EAAE,IACd,IAAMC,EAAiC,KAHvCH,EAAKA,EAAE,IAAKA,EAAE,KAGCI,SAAS,IAAIC,OAAhB,WAAoCL,EAAEI,SAAS,KAAQJ,EAAEI,SAAS,IACxEE,EAAiC,IAA1BL,EAAEG,SAAS,IAAIC,OAAhB,WAAoCJ,EAAEG,SAAS,KAAQH,EAAEG,SAAS,IACxEG,EAAiC,IAA1BL,EAAEE,SAAS,IAAIC,OAAhB,WAAoCH,EAAEE,SAAS,KAAQF,EAAEE,SAAS,IAC9E,MAAM,IAAN,OAAWD,GAAX,OAAgBG,GAAhB,OAAqBC,K,gCAQLC,GAChB,IAAMC,EAAO,SAAAC,GAAG,OAAKA,EAAIC,QAAQ,cAAc,KACzCC,EAAUJ,EAAKd,UAAUc,EAAKK,QAAQ,MAAMC,MAAM,KACvDC,EAAIpB,SAASc,EAAKG,EAAQ,GAAGlB,UAAU,IAAK,IAC5CsB,EAAIrB,SAASc,EAAKG,EAAQ,IAAK,IAC/BK,EAAItB,SAASc,EAAKG,EAAQ,IAAK,IAC/B5G,EAAIkH,WAAWT,EAAKG,EAAQ,GAAGlB,UAAU,EAAGkB,EAAQ,GAAGP,OAAS,KAAKc,QAAQ,GACvEC,EAAW,CACjBL,EAAEX,SAAS,IACXY,EAAEZ,SAAS,IACXa,EAAEb,SAAS,IACXiB,KAAKC,MAAU,IAAJtH,GAASoG,SAAS,IAAIV,UAAU,EAAG,IAQ/C,OALA0B,EAASG,SAAQ,SAAUC,EAAMC,GACZ,IAAhBD,EAAKnB,SACRe,EAASK,GAAK,IAAMD,MAGhB,IAAN,OAAYJ,EAASM,KAAK,O,iCAUTC,EAAQC,EAAUC,GACnC,OAAIF,EAAS,EACLC,EAEJD,EAAS,EACLE,EAED,O,sCAUe7H,EAAGiH,EAAGnD,GAC5B,MAAqB,kBAAX9D,EAAE8D,IAAuC,kBAAXmD,EAAEnD,GAClC9D,EAAE8D,GAAOmD,EAAEnD,GAGE,kBAAX9D,EAAE8D,IAAuC,kBAAXmD,EAAEnD,IACzC9D,EAAIA,EAAE8D,GAAKgE,gBACXb,EAAIA,EAAEnD,GAAKgE,gBACK,EAAIb,EAAIjH,EAAI,EAAI,OAHjC,I,kCAekB+H,EAAMjE,EAAKkE,GAC7B,IAAIzF,EAAOwF,EAIX,OAHGA,IACFxF,EAAOwF,EAAKvK,QAAO,SAAAyK,GAAI,OAAIA,EAAKnE,KAASkE,MAEnCzF,I,qCAUcwF,EAAMjE,EAAKkE,GAChC,IAAIzF,EAAOwF,EAIX,OAHGA,IACFxF,EAAOwF,EAAKvK,QAAO,SAAAyK,GAAI,OAAIA,EAAKnE,KAASkE,MAEnCzF,I,qCAScwF,EAAMG,GAY3B,OADAH,EAAOA,EAAKvK,QAAO,SAAAwK,GAAK,OAVL,SAACC,GACnB,IAAK,IAAInE,KAAOmE,EACf,GAAiB,MAAbA,EAAKnE,KAG2E,IAAhFmE,EAAKnE,GAAKsC,WAAWpB,cAAc6B,QAAQqB,EAAM9B,WAAWpB,eAC/D,OAAO,EAIkBmD,CAAWH,Q,oCASnBI,GACpB,IAAIC,EAAc,GAClB,IAAK,IAAMvE,KAAOsE,EAAS,CAC1B,GAAIA,EAAQhD,eAAetB,GACVsE,EAAQtE,IAEvBuE,EAAYC,KAAKxE,GAIpB,OAAOuE,M,KCxMF,SAASE,GAAmB3N,GACjC,MAAO,CACL3B,KAAMwE,EACN7C,gBAuCG,SAAS4N,GAAkBpN,GAChC,MAAO,CACLnC,KAAM8E,EACN3C,a,IC7CIqN,GAAYC,KAAZD,QACAE,GAAkBC,KAAlBD,cAEFE,GAAY,SAACC,EAAYC,GAAb,OAChBD,EAAa,cAAC,GAAD,CAAaxL,GAAIyL,IAAgBA,EAAU3C,YAEpD4C,GAAiB,SAAClF,GACtB,IAAImF,EAAU,GACVC,EAAY,GAChB,GAAIpF,EAEF,IADA,IAAMqF,EAAMrF,EAAIgD,MAAM,KACbsC,EAAQ,EAAGA,EAAQD,EAAI9C,OAAQ+C,IAAS,CAC/C,IAAMC,EAAMF,EAAIC,GACDF,EAAL,IAAVE,EAA2BC,EAAiB,UAAMH,EAAN,YAAmBG,GAC/DJ,EAAQX,KAAKY,GAGjB,OAAOD,GAGHK,GAAiB,SAAC7Q,GAAW,IAC1BoC,EAA6EpC,EAA7EoC,aAAc0O,EAA+D9Q,EAA/D8Q,UAAWC,EAAoD/Q,EAApD+Q,eAAgBC,EAAoChR,EAApCgR,aAAcjB,EAAsB/P,EAAtB+P,kBACzDkB,GAAYC,GAAMC,cAAcjB,MAAiBkB,SAAS,MAC1DC,EAAiB,WAClBJ,GACHlB,GAAkB,IAGnB,OACE,cAAC,KAAD,CACEtK,MAAOrD,IAAiBC,KAAiB,QAAU,OACnDiP,KAAK,SACL1R,MAAO,CAAE2R,OAAQ,OAAQC,YAAa,GACtCC,oBAAqB,QAACX,QAAD,IAACA,OAAD,EAACA,EAAWzF,KACjCqG,gBAAiBnB,GAAc,OAACO,QAAD,IAACA,OAAD,EAACA,EAAWzF,KAC3ClL,UAAW4Q,EAAiB,mBAAqB,GANnD,SAQG/E,GAAiBlH,KAAI,SAAC6M,GAAD,OACpBA,EAAKhG,QAAQiC,OAAS,EACpB,cAAC,KAAKgE,UAAN,CAEErG,MAAO6E,GAAUY,EAAcW,EAAKpG,OAFtC,SAIGoG,EAAKhG,QAAQ7G,KAAI,SAAC+M,GAAD,OAChBA,EAAalG,QAAQiC,OAAS,EAC5B,cAACoC,GAAD,CACExE,KACEqG,EAAarG,KACX,cAAC,GAAD,CAAMhL,KAAI,OAAEqR,QAAF,IAAEA,OAAF,EAAEA,EAAcrG,OACxB,KAGND,MAAO6E,GAAUY,EAAca,EAAatG,OAP9C,SASGsG,EAAalG,QAAQ7G,KAAI,SAACgN,GAAD,OACxB,eAAC,KAAKC,KAAN,WACGD,EAActG,KACb,cAAC,GAAD,CAAMhL,KAAI,OAAEsR,QAAF,IAAEA,OAAF,EAAEA,EAAetG,OACzB,KACJ,+BACG4E,GAAUY,EAAcc,EAAcvG,SAEzC,cAAC,IAAD,CAAMyG,QAAS,kBAAMX,KAAkBY,GAAIH,EAAcxG,SAP3CwG,EAAczG,SAJ3BwG,EAAaxG,KAgBpB,eAAC,KAAK0G,KAAN,WACGF,EAAarG,KAAO,cAAC,GAAD,CAAMhL,KAAMqR,EAAarG,OAAW,KACzD,+BAAO4E,GAAUY,EAAca,EAAatG,SAC5C,cAAC,IAAD,CAAMyG,QAAS,kBAAMX,KAAkBY,GAAIJ,EAAavG,SAH1CuG,EAAaxG,SA3B5BsG,EAAKtG,KAoCZ,eAAC,KAAK0G,KAAN,WACGJ,EAAKnG,KAAO,cAAC,GAAD,CAAMhL,KAAI,OAAEmR,QAAF,IAAEA,OAAF,EAAEA,EAAMnG,OAAW,KAC1C,+BAAO4E,GAAUY,EAAD,OAAeW,QAAf,IAAeA,OAAf,EAAeA,EAAMpG,SACpCoG,EAAKrG,KAAO,cAAC,IAAD,CAAM0G,QAAS,kBAAMX,KAAkBY,GAAIN,EAAKrG,OAAW,OAH1DqG,EAAKtG,WAWzB6G,GAAgB,SAAClS,GAAW,IACxByC,EAA8BzC,EAA9ByC,YAAauO,EAAiBhR,EAAjBgR,aACrB,OACE,cAAC,KAAD,CAAMM,KAAK,aAAa1R,MAAO,CAAEuS,gBAAiB1P,GAAlD,SACGuJ,GAAiBlH,KAAI,SAAC6M,GAAD,OACpBA,EAAKhG,QAAQiC,OAAS,EACpB,cAACoC,GAAD,CAEEoC,eAAe,eACf7G,MACE,iCACGoG,EAAKnG,KAAO,cAAC,GAAD,CAAMhL,KAAI,OAAEmR,QAAF,IAAEA,OAAF,EAAEA,EAAMnG,OAAW,KAC1C,+BAAO4E,GAAUY,EAAcW,EAAKpG,YAN1C,SAUGoG,EAAKhG,QAAQ7G,KAAI,SAAC+M,GAAD,OAChBA,EAAalG,QAAQiC,OAAS,EAC5B,cAACoC,GAAD,CAEExE,KACEqG,EAAarG,KACX,cAAC,GAAD,CAAMhL,KAAI,OAAEqR,QAAF,IAAEA,OAAF,EAAEA,EAAcrG,OACxB,KAEND,MAAO6E,GAAUY,EAAca,EAAatG,OAP9C,SASGsG,EAAalG,QAAQ7G,KAAI,SAACgN,GAAD,OACxB,eAAC,KAAKC,KAAN,WACE,+BACG3B,GAAUY,EAAcc,EAAcvG,SAEzC,cAAC,IAAD,CAAM0G,GAAIH,EAAcxG,SAJVwG,EAAczG,SAT3BwG,EAAaxG,KAkBpB,eAAC,KAAK0G,KAAN,WACGF,EAAarG,KACZ,cAAC,GAAD,CAAMhL,KAAI,OAAEqR,QAAF,IAAEA,OAAF,EAAEA,EAAcrG,OACxB,KACJ,+BAAO4E,GAAUY,EAAca,EAAatG,SAC5C,cAAC,IAAD,CAAM0G,GAAIJ,EAAavG,SALTuG,EAAaxG,SA9B5BsG,EAAKtG,KAyCZ,eAAC,KAAK0G,KAAN,WACGJ,EAAKnG,KAAO,cAAC,GAAD,CAAMhL,KAAI,OAAEmR,QAAF,IAAEA,OAAF,EAAEA,EAAMnG,OAAW,KAC1C,+BAAO4E,GAAUY,EAAD,OAAeW,QAAf,IAAeA,OAAf,EAAeA,EAAMpG,SACpCoG,EAAKrG,KAAO,cAAC,IAAD,CAAM2G,GAAIN,EAAKrG,OAAW,OAHzBqG,EAAKtG,WAwBhBgH,gBALS,SAAC,GAAe,IAAb5M,EAAY,EAAZA,MAEzB,MAAO,CAAErD,aAD6BqD,EAA9BrD,aACeK,YADegD,EAAhBhD,eAIgB,CAAEsN,sBAA3BsC,EAbK,SAACrS,GACnB,OAAOA,EAAMQ,OAASgC,KACpB,cAAC,GAAD,eAAoBxC,IAEpB,cAAC,GAAD,eAAmBA,OC1JfsS,GAAUC,KAAVD,MAyBOD,gBALS,SAAC,GAAe,IAAb5M,EAAY,EAAZA,MAEzB,MAAO,CAAEtD,aAD+BsD,EAAhCtD,aACeC,aADiBqD,EAAlBrD,gBAITiQ,EAvBQ,SAAC,GAAmF,IAAlFlQ,EAAiF,EAAjFA,aAAcC,EAAmE,EAAnEA,aAAc0O,EAAqD,EAArDA,UAAWC,EAA0C,EAA1CA,eAA0C,IAA1BC,aACxEhR,EAAQ,CAAEoC,eAAc0O,YAAYC,iBAAgBC,kBAD8C,UAExG,OACE,cAACsB,GAAD,CACEnS,UAAS,mBAAciC,IAAiB0B,KAAe,gBAAkB,IACzE0O,MAAO5O,KACP6O,UAAWtQ,EAHb,SAKE,cAAC,cAAD,CAAYuQ,UAAQ,EAApB,SACE,cAAC,GAAD,aACElS,KAAMgC,MACFxC,WCKCqS,gBALS,SAAC,GAEvB,MAAO,CAAE5P,YAF4B,EAAZgD,MACjBhD,eAIK4P,EAnBO,SAAC,GAAwC,IAAvC5P,EAAsC,EAAtCA,YAAsC,IAAzBuO,aAC9BhR,EAAQ,CAAEyC,cAAauO,kBADgC,UAE7D,OACC,qBAAK7Q,UAAS,kBAAa+Q,GAAMyB,iBAAiBlQ,IAAgB7C,MAAO,CAACuS,gBAAiB1P,GAA3F,SACC,qBAAKtC,UAAU,kBAAf,SACC,cAAC,GAAD,aACCK,KAAMuD,MACF/D,W,oBCNDkQ,GAAkBC,KAAlBD,cAEF0C,GAAqB,SAAC5S,EAAOiR,GAAc,IACvC9O,EAA0BnC,EAA1BmC,aACF0Q,EAD4B7S,EAAZuC,UACOwB,KAC7B,OAAGkN,IAAajR,EAAM8S,WACb,EAEND,EACM,OAGD,GAAN,OADC1Q,EACS0B,KAEAD,KAFV,OAMEmP,GAAU,SAAC/S,GAAW,IAClBmC,EAA2BnC,EAA3BmC,aACR,MAAgB,UADmBnC,EAAbgT,SAEjB7Q,EACM,yBAEF,sBAGLA,EACK,mBAEF,iBAGH8Q,GAAiB,SAAChC,EAAU6B,GAChC,OAAG7B,IAAa6B,EACP,SAEA,QAoBIT,gBALS,SAAC,GAAe,IAAb5M,EAAY,EAAZA,MAEzB,MAAO,CAAEtD,aAD0BsD,EAA3BtD,aACeI,QADYkD,EAAblD,WAIT8P,EAhBK,SAACrS,GACnB,IAAMiR,GAAYC,GAAMC,cAAcjB,MAAiBkB,SAAS,MAChE,OACE,qBACEjR,UAAW8S,GAAehC,EAAUjR,EAAM8S,YAC1ClT,MAAO,CAAC4S,MAAM,GAAD,OAAKI,GAAmB5S,EAAOiR,KAF9C,SAGE,qBAAKiC,IAAKH,GAAQ/S,GAAQmT,IAAG,UAAKtR,IAAL,gB,oBCCpBwQ,gBALS,SAAC,GAAe,IAAb5M,EAAY,EAAZA,MAEzB,MAAO,CAAEtD,aADyCsD,EAA1CtD,aACeC,aAD2BqD,EAA5BrD,aACeO,UADa8C,EAAd9C,aAIE,CAAEoN,sBAA3BsC,EA5CU,SAAC,GAOnB,IANLjQ,EAMI,EANJA,aACAO,EAKI,EALJA,UACAoN,EAII,EAJJA,kBACAe,EAGI,EAHJA,UACAC,EAEI,EAFJA,eAEI,IADJC,aAEMhR,EAAQ,CAAEoC,eAAc0O,YAAWC,iBAAgBC,kBADrD,UAGEoC,EAAU,WACdrD,GAAkB,IAGpB,OACE,cAAC,KAAD,CACEsD,UAAU,OACVC,UAAU,EACVF,QAASA,EACTG,QAAS5Q,EACT6Q,UAAW,CAAEC,QAAS,GALxB,SAOE,eAAClS,GAAA,EAAD,CAAMK,cAAc,SAASzB,UAAU,QAAvC,UACE,eAACoB,GAAA,EAAD,CAAMG,eAAe,UAAUD,WAAW,SAA1C,UACE,cAAC,GAAD,CAAMqR,YAAY,IAClB,qBAAK3S,UAAU,YAAY6R,QAAS,kBAAMoB,KAA1C,SACE,cAACM,GAAA,EAAD,SAGJ,qBAAKvT,UAAU,kBAAf,SACE,cAAC,cAAD,CAAYuS,UAAQ,EAApB,SACE,cAAC,GAAD,aAAalS,KAAMgC,MAAmBxC,gB,mGCUnC2T,GAhDK,SAAA3T,GAAU,IAErB4T,EAA0B5T,EAA1B4T,YAFoB,EAEM5T,EAAbqN,aAFO,MAED,GAFC,IAIEwG,oBAAS,GAJX,oBAIrBN,EAJqB,KAIZO,EAJY,OAKUD,mBAASxG,GALnB,oBAKrB0G,EALqB,KAKRC,EALQ,OAMIH,mBAASxG,GANb,oBAMrB4G,EANqB,KAMXC,EANW,KAQ5BC,qBAAU,WACTD,EAAY7G,GACZ2G,EAAe3G,KACb,CAACA,IAEJ,IAAM+G,EAAmB,WACxBN,GAAYP,IAWb,OACC,sBAAKpT,UAAU,eAAf,UACC,qBAAKA,UAAU,wBAAf,SACC,qBAAKA,UAAU,QAAQP,MAAO,CAACuS,gBAAiB8B,GAAsB,WAAYjC,QAASoC,MAG3Fb,GACC,qCACC,qBAAKpT,UAAU,wBAAwB6R,QAASoC,IAChD,cAAC,KAAD,CAAc/G,MAAO0G,EAAaM,SAjBjB,SAAC9E,GAAW,IAC1B+E,EAAO/E,EAAP+E,IACDvG,EAAI,cAAUuG,EAAIhG,EAAd,aAAoBgG,EAAI/F,EAAxB,aAA8B+F,EAAI9F,EAAlC,aAAwC8F,EAAI/M,EAA5C,KACV2M,EAAYnG,GACZiG,EAAeM,GACfV,EAAYrE,a,uECdd,IAAMgF,GAAmB,SAAC,GAAgB,IACnCC,EANP,SAA4BlS,GAE3B,OADamS,GAAK1P,QAAO,SAAA6L,GAAG,OAAKA,EAAI8D,SAAWpS,KACpC,GAIKqS,CADuB,EAAbrS,QAEpBsS,EAAkBJ,EAAlBI,SAAUpJ,EAAQgJ,EAARhJ,KACjB,OACC,sBAAKrL,UAAU,4BAAf,UACC,qBAAKP,MAAO,CAACiV,SAAU,QAAS3B,IAAG,qBAAgB1H,EAAhB,QAA4B2H,IAAKyB,IACpE,uBAAMzU,UAAU,4BAAhB,UAA6CyU,EAA7C,IAAuD,cAACE,GAAA,EAAD,CAAc3U,UAAU,wBAwDnEkS,gBALS,SAAC,GAEvB,MAAO,CAAE/P,OAF4B,EAAZmD,MACjBnD,UAI8B,CAACyS,ePjDlC,SAAwBzS,GAC7B,MAAO,CACL9B,KAAMyE,EACN3C,YO8CW+P,EAnDY,SAAC,GAA+C,IAA7C/P,EAA4C,EAA5CA,OAAQ0S,EAAoC,EAApCA,cAAeD,EAAqB,EAArBA,eAC9CE,EACL,cAAC,KAAD,UAEER,GAAK3P,KAAI,SAAC8L,EAAK5B,GAAO,OACrB,cAAC,KAAK+C,KAAN,CAEC5R,UAAWmC,IAAWsO,EAAI8D,OAAQ,gCAAiC,GACnE1C,QAAS,kBAAM+C,EAAenE,EAAI8D,SAHnC,SAKC,uBAAMvU,UAAU,oDAAhB,UACC,gCACC,qBAAKP,MAAO,CAACiV,SAAU,QAAS3B,IAAG,qBAAgBtC,EAAIpF,KAApB,QAAgC2H,IAAKvC,EAAIgE,WAC5E,sBAAMzU,UAAU,0BAAhB,SAA2CyQ,EAAIgE,cAE/CtS,IAAWsO,EAAI8D,OAAQ,cAACQ,GAAA,EAAD,CAAe/U,UAAU,iBAAoB,SATjE6O,QAgBV,OACC,cAAC,KAAD,CAAUqE,UAAU,cAAc8B,QAASF,EAAgBG,QAAS,CAAC,SAArE,SAEEJ,EAEC,mBAAGK,KAAK,KAAKlV,UAAU,YAAY6R,QAAS,SAAAsD,GAAC,OAAIA,EAAEC,kBAAnD,SACC,cAAC,GAAD,CAAkBjT,OAAQA,MAK3B,cAAC,KAAD,CAAMgP,KAAK,aAAX,SACC,cAAC,KAAKS,KAAN,UACC,mBAAGsD,KAAK,KAAKrD,QAAS,SAAAsD,GAAC,OAAIA,EAAEC,kBAA7B,SACC,cAACC,GAAA,EAAD,CAAgBrV,UAAU,6BCnC5BsV,GAAe,CACpB,UACA,UACA,UACA,UACA,WAGKC,GAAa,SAAC,GAAD,IAAExJ,EAAF,EAAEA,KAAMyJ,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,SAAUC,EAA5B,EAA4BA,SAA5B,OAClB,sBAAK1V,UAAS,eAAU0V,EAAU,GAAK,qDAAvC,UACC,qBAAK1V,UAAS,UAAKyV,EAAW,cAAgB,GAAhC,YAAsCC,EAAU,OAAS,IAAvE,SAA8E3J,IAC9E,8BAAMyJ,QAyJFG,GAAqB,CAC1BhG,sBACAiG,gBR9JM,SAAyBxT,GAC9B,MAAO,CACL/B,KAAM2E,EACN5C,YQ4JHyT,iBR7KM,SAA0B5T,GAC/B,MAAO,CACL5B,KAAM0E,EACN9C,iBQ2KH6T,oBRzJM,SAA6BxT,GAClC,MAAO,CACLjC,KAAM4E,EACN3C,gBQuJHyT,uBRnJM,SAAgCxT,GACrC,MAAO,CACLlC,KAAM6E,EACN3C,mBQiJHyT,cRtIM,SAAuBvT,GAC5B,MAAO,CACLpC,KAAM+E,EACN3C,kBQsIWyP,gBAdS,SAAC,GAAe,IAAb5M,EAAY,EAAZA,MAEzB,MAAO,CAAElD,QAD2FkD,EAA5FlD,QACUH,aADkFqD,EAAnFrD,aACeD,aADoEsD,EAArEtD,aACeM,YADsDgD,EAAvDhD,YACcC,eADyC+C,EAA1C/C,eACiBJ,OADyBmD,EAA1BnD,OACSM,aADiB6C,EAAlB7C,gBAa5CkT,GAAzBzD,EA9JkB,SAAC,GAc3B,IAoCsB+D,EAjD5B7T,EAaK,EAbLA,QACAH,EAYK,EAZLA,aACAD,EAWK,EAXLA,aACAM,EAUK,EAVLA,YACAC,EASK,EATLA,eACAJ,EAQK,EARLA,OACAM,EAOK,EAPLA,aACAkN,EAMK,EANLA,mBACAiG,EAKK,EALLA,gBACAC,EAIK,EAJLA,iBACAC,EAGK,EAHLA,oBACAC,EAEK,EAFLA,uBACAC,EACK,EADLA,cAEMtD,EAAWtQ,IAAYwB,KACvBsS,EAAalU,EAFd,EAIwBmU,6BAArBC,EAJH,EAIGA,SAAUC,EAJb,EAIaA,OAkClB,OACC,qCACC,sBAAKrW,UAAU,OAAf,UACC,oBAAIA,UAAU,wBAAd,wBAEC0S,EACA,cAAC,GAAD,CACC3G,KAAK,iBACL2J,UAAQ,EACRF,SACC,cAAC,GAAD,CAAatI,MAAO5K,EAAamR,YAnCZ,SAACrE,GAC3B2G,EAAuB,IADc,IAE7B5B,EAAQ/E,EAAR+E,IACFvG,EAAI,eAAWuG,EAAIhG,EAAf,aAAqBgG,EAAI/F,EAAzB,aAA+B+F,EAAI9F,EAAnC,aAAyC8F,EAAI/M,EAA7C,KACJsF,EAAMqE,GAAMuF,UAAU1I,GAC5BkI,EAAoBpJ,QAkCjB,cAAC,GAAD,CACCX,KAAK,oBACL2J,UAAQ,EACRF,SACC,cAAC,GAAD,CAAatI,MAAO3K,EAAgBkR,YApCZ,SAACrE,GAAW,IACjC+E,EAAQ/E,EAAR+E,IACFvG,EAAI,eAAWuG,EAAIhG,EAAf,aAAqBgG,EAAI/F,EAAzB,aAA+B+F,EAAI9F,EAAnC,aAAyC8F,EAAI/M,EAA7C,KACJsF,EAAMqE,GAAMuF,UAAU1I,GAC5BmI,EAAuBrJ,QAqCrB,cAAC,GAAD,CACCX,KAAK,mBACLyJ,SACC,eAAC,KAAMe,MAAP,CACCC,KAAK,QACLtC,SAAU,SAAAiB,GAAC,OAvCO/F,EAuCY+F,EAAEsB,OAAOrH,MAtC5C2G,EAAuB,IACpB3G,IAAUxL,OACZkS,EAAoBR,GAAa,IACjC3F,GAAmB,SAEpBiG,EAAgBxG,GANM,IAACA,GAwClBA,MAAOhN,EAHR,UAKC,cAAC,KAAMsU,OAAP,CAActH,MAAO/M,KAArB,kBACA,cAAC,KAAMqU,OAAP,CAActH,MAAOxL,KAArB,sBAIH,cAAC,GAAD,CACCmI,KAAK,kBACLyJ,SACC,eAAC,KAAMe,MAAP,CACCd,SAAU/C,EACV8D,KAAK,QACLtC,SAAU,SAAAiB,GAAC,OAAIU,EAAiBV,EAAEsB,OAAOrH,QACzCA,MAAOnN,EAJR,UAMC,cAAC,KAAMyU,OAAP,CAActH,MAAOlN,KAArB,mBACA,cAAC,KAAMwU,OAAP,CAActH,MAAOzL,KAArB,qBAGF8R,SAAU/C,IAEX,cAAC,GAAD,CACC3G,KAAK,qBACLyJ,SACC,cAAC,KAAD,CACCC,SAAU/C,EACViE,QAAST,EACThC,SAAU,kBAAMvE,GAAoB3N,MAGtCyT,SAAU/C,IAEX,cAAC,GAAD,CACC3G,KAAK,cACLyJ,SACC,cAAC,KAAD,CAAQmB,QAA0B,SAAjBlU,EAAyByR,SAjG3B,SAAC0C,GACpBb,EAAuB,IACvB,IAAMc,EAAeD,EAAY,OAAS,QAC1CZ,EAAca,GACZT,EAAS,CAAE9Q,MAAO+Q,EAAOQ,aAiG1B,sBAAK7W,UAAU,OAAf,UACC,oBAAIA,UAAU,wBAAd,oBACA,cAAC,GAAD,CACC+L,KAAK,YACLyJ,SACC,cAAC,GAAD,CAAaX,eAAa,SAI7B,8BACC,cAAC,KAAD,CACCiC,MAlFwBb,EAkFC,CAAE7T,UAASH,eAAcD,eAAcM,cAAaC,iBAAgBJ,SAAQM,gBAlF7DsU,KAAKC,UAAUf,EAAa,KAAM,IAmF1EgB,OAAQ,kBAAMlT,KAAQmT,QAAQ,qFAF/B,SAIC,cAAC,KAAD,CAAQ7L,KAAM,cAAC8L,GAAA,EAAD,IAAmBC,OAAK,EAAtC,SACC,4DCzKOC,GAAb,+MACC/S,MAAQ,CAAE8O,SAAS,GADpB,EAGEkE,WAAa,WACX,EAAKC,SAAS,CACZnE,SAAS,KALf,EASEH,QAAU,WACR,EAAKsE,SAAS,CACZnE,SAAS,KAXf,wDAgBE,OACI,qCACE,cAAC,KAAD,CAAMjC,KAAK,aAAX,SACE,cAAC,KAAKS,KAAN,CAAWC,QAAShH,KAAKyM,WAAzB,SACE,cAACE,GAAA,EAAD,CAAiBxX,UAAU,sBAG/B,cAAC,KAAD,CACEoL,MAAM,eACN8H,UAAU,QACVb,MAAO,IACPY,QAASpI,KAAKoI,QACdG,QAASvI,KAAKvG,MAAM8O,QALtB,SAOE,cAAC,GAAD,aA9BV,GAA8BpI,aA0CfkH,gBALS,SAAC,GAEvB,MAAO,CAAE/P,OAF4B,EAAZmD,MACjBnD,UAIK+P,CAAyBmF,I,sECtBxC,IAAMI,GAbN,SAASC,EAAeC,EAAgBC,GACvCA,EAAaA,GAA0B,GADY,qBAE5BD,GAF4B,IAEnD,2BAAwC,CAAC,IAA7BE,EAA4B,QACT,IAA3BA,EAAQrM,QAAQiC,QAClBmK,EAAWlI,KAAKmI,GAEdA,EAAQrM,QAAQiC,OAAS,GAC3BiK,EAAcG,EAAQrM,QAASoM,IAPkB,8BAUnD,OAAOA,EAGWF,CAAc7L,IAE3BiM,GAAkB,SAAAC,GACvB,OAAQA,GACP,IAAK,aACJ,OAAO,cAACzM,GAAA,EAAD,CAAmBtL,UAAU,iBACrC,IAAK,OACJ,OAAO,cAAC4L,GAAA,EAAD,CAAkB5L,UAAU,gBACpC,IAAK,aACJ,OAAO,cAACgY,GAAA,EAAD,CAAmBhY,UAAU,iBACrC,IAAK,QACJ,OAAO,cAACiY,GAAA,EAAD,CAAkBjY,UAAU,iBACpC,QACC,OAAO,OAqEKkY,GA7CK,SAAArY,GAAU,IACrBsY,EAAkCtY,EAAlCsY,OAAQC,EAA0BvY,EAA1BuY,MAAOtH,EAAmBjR,EAAnBiR,SAAUK,EAAStR,EAATsR,KADL,EAEFuC,mBAAS,IAFP,oBAErBtE,EAFqB,KAEdiJ,EAFc,OAGE3E,mBAAS,IAHX,oBAGrB4E,EAHqB,KAGZC,EAHY,KAItBC,EAAWC,iBAAO,MAuBxB,OAJGN,GAHFK,EAASE,QAAQC,QAQjB,cAAC,KAAD,CACCC,IAAKJ,EACLxY,UAAS,2BAAsB8Q,EAAU,YAAc,GAA9C,YAA6D,UAATK,EAAmB,QAAU,IAC1F0H,kBAAkB,sBAClBP,QAASA,EACTQ,SA3Be,WAChBT,EAAS,IACTE,EAAW,IACRH,GACFA,KAwBAW,SApBe,SAAAxJ,GAChB8I,EAAS9I,GACTgJ,EAAYhJ,EApCakI,GAAW9S,KAAI,SAAC0K,GAC1C,IAAM0I,EAAW1I,EAAKnE,IAAIgD,MAAM,KAAK,GACrC,MAAO,CACNkB,MAAOC,EAAKlE,KACZ6N,MACC,cAAC,IAAD,CAAMlH,GAAIzC,EAAKlE,KAAf,SACC,sBAAKnL,UAAU,mBAAf,UACC,qBAAKA,UAAU,OAAf,SACE8X,GAAgBC,KAElB,gCACC,qBAAK/X,UAAU,uBAAf,SAAsC,cAAC,GAAD,CAAa0E,GAAI2K,EAAKjE,UAC5D,sBAAKpL,UAAU,0BAAf,UAA0C+X,EAA1C,mBAwBqB,KAmBxB3I,MAAOA,EACP6J,aAAc,SAACC,EAAYC,GAAb,OACqD,IAAlEA,EAAO/J,MAAMhD,cAAc6B,QAAQiL,EAAW9M,gBAThD,SAYC,cAAC,KAAD,CAAOgN,YAAY,YAAaC,OAAQ,cAACC,GAAA,EAAD,CAAgBtZ,UAAU,cC1EtDkS,gBALS,SAAC,GAEvB,MAAO,CAAE3P,eAF4B,EAAZ+C,MACjB/C,kBAI8B,GAAzB2P,EArBU,SAACrS,GAAW,IAC5BsY,EAAkCtY,EAAlCsY,OAAQC,EAA0BvY,EAA1BuY,MAAO7V,EAAmB1C,EAAnB0C,eACjB4O,EAAOJ,GAAMyB,iBAAiBjQ,GAEpC,OACC,sBAAKvC,UAAS,qBAAgBmY,EAAS,oBAAsB,GAA/C,YAAqDhH,GAAQ1R,MAAO,CAACuS,gBAAiBzP,GAApG,UACC,qBAAKvC,UAAU,kCAAf,SACC,cAAC,GAAD,CAAaoY,MAAOA,EAAOD,OAAQA,MAEpC,qBAAKnY,UAAU,YAAY6R,QAASuG,EAApC,SACC,cAACmB,GAAA,EAAD,YCPIC,GAAWpH,KAAXoH,OA2EOtH,gBALS,SAAC,GAAe,IAAb5M,EAAY,EAAZA,MAEzB,MAAO,CAAEtD,aADmEsD,EAApEtD,aACeI,QADqDkD,EAAtDlD,QACUG,eAD4C+C,EAA7C/C,eACiBC,UAD4B8C,EAA7B9C,UACYC,aADiB6C,EAAlB7C,gBAIpB,CAACkN,sBAAoBC,sBAA9CsC,EAzEU,SAAArS,GAAU,IACzBmC,EAAoHnC,EAApHmC,aAAcQ,EAAsG3C,EAAtG2C,UAAWJ,EAA2FvC,EAA3FuC,QAASG,EAAkF1C,EAAlF0C,eAAgBoN,EAAkE9P,EAAlE8P,mBAAoBC,EAA8C/P,EAA9C+P,kBAAmBkB,EAA2BjR,EAA3BiR,SAAUrO,EAAiB5C,EAAjB4C,aAD3E,EAEQiR,oBAAS,GAFjB,oBAEzB+F,EAFyB,KAEXC,EAFW,KAI1BC,EAAgB,WACpBD,GAAgB,IAWZhH,EAAWtQ,IAAYwB,KAOvBgW,EALArX,EAGGwO,GAAMyB,iBAAiBjQ,GAFrBwO,GAAMyB,iBAAkC,SAAjB/P,EAA0B,SAAW,WAsBvE,OANAuR,qBAAU,WACJlD,GACF6I,OAKF,cAACH,GAAD,CAAQxZ,UAAS,qBAAgB4Z,GAAWna,MAAO,CAACuS,gBAAiBzP,GAArE,SACE,sBAAKvC,UAAS,6BAAwB0S,EAAW,iBAAmB,IAApE,UACE,cAAC,GAAD,CAAMG,SAAU+G,IAChB,sBAAK5Z,UAAU,MAAMP,MAAO,CAAC4S,MAAM,eAAD,OApBnCK,GAAY5B,EACN,MAGD,GAAN,OADC9O,EACS0B,KAEAD,KAFV,MAgBoC,MAAlC,UACE,qBAAKzD,UAAU,WAAf,SACE,oBAAIA,UAAU,6CAAd,SAEI0S,IAAa5B,EACb,KAEA,oBAAI9Q,UAAU,yCAAyC6R,QAAS,WA3CxEf,EAGFlB,GAAmBpN,GAFnBmN,GAAoB3N,IA0CV,SACGA,GAAgB8O,EAAW,cAAC+I,GAAA,EAAD,CAAoB7Z,UAAU,aAAgB,cAAC8Z,GAAA,EAAD,CAAkB9Z,UAAU,mBAK9G,qBAAKA,UAAU,YAAf,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,CAAWmY,OAAQsB,EAAcrB,MAAOuB,e,UCpE9CI,GAAiB,CACpB,OAAS,cAAC,GAAD,CAAarV,GAAG,UAG1BmH,GAAiB8C,SAAQ,SAAC8B,EAAK5B,GAC9B,IAAMmL,EAAmB,SAACC,GAAD,OAASF,GAAeE,EAAI9O,MAAQ,cAAC,GAAD,CAAazG,GAAIuV,EAAI7O,SAClF4O,EAAiBvJ,GACbA,EAAIjF,SACPiF,EAAIjF,QAAQmD,SAAS,SAAA8B,GACpBuJ,EAAiBvJ,GACdA,EAAIjF,SACNiF,EAAIjF,QAAQmD,SAAS,SAAA8B,GACpBuJ,EAAiBvJ,YAOtB,IAAMyJ,GAAkBC,aAAW,SAAAta,GAAU,IAEtCua,EADeva,EAAbwa,SACsBC,SAASpM,MAAM,KAAKtJ,QAAO,SAAAiK,GAAC,OAAIA,KACxD0L,EAAkBH,EAAazV,KAAI,SAAC6V,EAAGhK,GAC1C,IAAMiK,EAAG,WAAOL,EAAaM,MAAM,EAAGlK,EAAQ,GAAG1B,KAAK,MACtD,OACE,cAAC,KAAW8C,KAAZ,UACE,cAAC,IAAD,CAAME,GAAI2I,EAAV,SAAgBV,GAAeU,MADXA,MAM1B,OACA,cAAC,KAAD,UACEF,OAaWI,GARf,2KAEE,OACC,cAACT,GAAD,QAHH,GAAmClP,aC1BpB4P,GAdW,SAAC,GAAwB,IAAtBxP,EAAqB,EAArBA,MAC5B,OADiD,EAAdyP,QAGjC,sBAAK7a,UAAU,kBAAf,UACC,oBAAIA,UAAU,iCAAd,SACC,cAAC,GAAD,CAAa0E,GAAI0G,GAAe,WAEjC,cAAC,GAAD,OAGA,MCXW,SAAS0P,KACvB,OACC,wBAAQ9a,UAAU,SAAlB,SACC,gEAA6B,IAAI+a,MAAOC,eAAxC,IAAyD,sBAAMhb,UAAU,uBAAhB,mBAA2C0B,OAApG,6BCDI,IAAMuZ,GAAW,WACtB,OACE,cAAC,WAAD,CAAUC,SAAU,cAACtb,GAAA,EAAD,CAASG,MAAM,YAAnC,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoL,KAAI,UAAKtJ,IAAL,SAA6BsZ,UAAWC,gBAAK,kBAAM,oCAC9D,cAAC,IAAD,CAAOjQ,KAAI,UAAKtJ,IAAL,UAA8BsZ,UAAWC,gBAAK,kBAAM,oCAC/D,cAAC,IAAD,CAAOjQ,KAAI,UAAKtJ,IAAL,SAA6BsZ,UAAWC,gBAAK,kBAAM,oCAC9D,cAAC,IAAD,CAAUC,KAAI,UAAKxZ,KAAmBiQ,GAAE,UAAKjQ,IAAL,iBAMjCiJ,OAAMwQ,KAAKL,ICMlBM,GAAYnJ,KAAZmJ,QACAxL,GAAkBC,KAAlBD,cAEKyL,GAAY,SAAC,GAAyC,IAAvCxZ,EAAsC,EAAtCA,aAAcI,EAAwB,EAAxBA,QAASiY,EAAe,EAAfA,SAC3CoB,EAAmB1K,GAAMtE,aAAaZ,GAAkBwO,EAASC,UAEjExJ,GADUC,GAAMC,cAAcjB,MACVkB,SAAS,MAC7ByK,EAAYtZ,IAAYC,KACxBqQ,EAAWtQ,IAAYwB,KAU7B,MAAe,YAFIuS,6BAAXwF,OAGC,cAAC/b,GAAA,EAAD,CAASG,MAAM,SAItB,eAAC,KAAD,WACE,cAAC,GAAD,CAAW+Q,SAAUA,IACnB4B,IAAa5B,EAAY,cAAC,GAAD,CAAQH,UAAW8K,IAAsB,KACpE,eAAC,KAAD,CAAQzb,UAAU,gBAAlB,UACI0b,IAAc5K,EAAY,cAAC,GAAD,CAASH,UAAW8K,IAAsB,KACtE,eAAC,KAAD,CAAQzb,UAAU,aAAaP,MAAO,CAACmc,YAlBxClJ,GAAY5B,EACN,EAEF9O,EAAe0B,KAA2BD,MAe7C,UACE,sBAAKzD,UAAS,sBAAiB0S,EAAW,iBAAmB,IAA7D,UACE,cAAC,GAAD,CAAYmI,QAAO,OAAEY,QAAF,IAAEA,OAAF,EAAEA,EAAkBlQ,WAAYH,MAAK,OAAEqQ,QAAF,IAAEA,OAAF,EAAEA,EAAkBrQ,QAC5E,cAACmQ,GAAD,UACE,cAAC,GAAD,SAGJ,cAACT,GAAD,UAGHhK,GAAY,cAAC,GAAD,QAUJoB,gBALS,SAAC,GAAe,IAAb5M,EAAY,EAAZA,MAEzB,MAAO,CAAEtD,aADkCsD,EAAnCtD,aACeI,QADoBkD,EAArBlD,QACUD,OADWmD,EAAZnD,UAIlB+P,CAAyBpH,IAAMwQ,KAAKE,KCjDpCP,GAlBS,WACtB,OACE,cAAC,WAAD,CAAUC,SAAU,cAACtb,GAAA,EAAD,CAASG,MAAM,SAAnC,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoL,KAAI,UAAKrJ,IAAL,UAA+BqZ,UAAWC,gBAAK,kBAAM,wEAChE,cAAC,IAAD,CAAOjQ,KAAI,UAAKrJ,IAAL,YAAiCqZ,UAAWC,gBAAK,kBAAM,wEAClE,cAAC,IAAD,CAAOjQ,KAAI,UAAKrJ,IAAL,YAAiCqZ,UAAWC,gBAAK,kBAAM,iEAClE,cAAC,IAAD,CAAOjQ,KAAI,UAAKrJ,IAAL,eAAoCqZ,UAAWC,gBAAK,kBAAM,wEACrE,cAAC,IAAD,CAAOjQ,KAAI,UAAKrJ,IAAL,eAAoCqZ,UAAWC,gBAAK,kBAAM,iEACrE,cAAC,IAAD,CAAOjQ,KAAI,UAAKrJ,IAAL,oBAAyCqZ,UAAWC,gBAAK,kBAAM,iEAC1E,cAAC,IAAD,CAAOjQ,KAAI,UAAKrJ,IAAL,YAAiCqZ,UAAWC,gBAAK,kBAAM,oCAClE,cAAC,IAAD,CAAOjQ,KAAI,UAAKrJ,IAAL,YAAiCqZ,UAAWC,gBAAK,kBAAM,oCAClE,cAAC,IAAD,CAAUC,KAAI,UAAKvZ,KAAoBgQ,GAAE,UAAKhQ,IAAL,kBCFlC+Z,GAXW,WACzB,OACC,qBAAK7b,UAAU,iBAAf,SACC,cAAC,IAAD,UACC,cAAC,IAAD,CAAOmL,KAAK,GAAGgQ,UAAWW,U,oBCEfC,GAPA,CACbC,KAAMC,KACN9Z,OAAQ,QACR+Z,SAAS,eACJC,K,oBCGQC,GAPA,CACbJ,KAAMK,KACNla,OAAQ,KACR+Z,SAAS,eACJI,K,oBCGQC,GAPA,CACbP,KAAMQ,KACNra,OAAQ,QACR+Z,SAAS,eACJO,K,oBCKQC,GAPG,CACdC,GAAIC,GACJC,GAAIC,GACJC,GAAIC,GACJC,GCNW,CACbjB,KAAMkB,KACN/a,OAAQ,QACR+Z,SAAS,eACJiB,M,mBCiCQhD,eAAWjI,aANF,SAAC,GAAqB,IAAnB5M,EAAkB,EAAlBA,MAAOjB,EAAW,EAAXA,KAGhC,MAAO,CAAElC,OAFWmD,EAAZnD,OAES+B,MADCG,EAAVH,SAIgBgO,EA9BL,SAACrS,GAAW,IACvBsC,EAAqBtC,EAArBsC,OAAQkY,EAAaxa,EAAbwa,SACV+C,EAAmBV,GAAUva,GACnC,OACE,cAAC,KAAD,CACEA,OAAQib,EAAiBjb,OACzB+Z,SAAUkB,EAAiBlB,SAF7B,SAGE,cAAC,KAAD,CAAgB/Z,OAAQib,EAAiBpB,KAAzC,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqB,OAAK,EAAClS,KAAK,IAAlB,SACE,cAAC,IAAD,CAAU2G,GAAIjQ,QAEhB,cAAC,IAAD,CAAOsJ,KAAMrJ,IAAb,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOqJ,KAAMtJ,IAAb,SACE,cAAC,GAAD,CAAWwY,SAAUA,iBCnB3BhE,GAAS,CACbiH,KAAK,GAAD,OAAKC,GAAL,uBACJC,MAAM,GAAD,OAAKD,GAAL,yBAuBQE,OApBf,WACE,OACE,qBAAKzd,UAAU,MAAf,SACE,cAAC,IAAD,CAAUiK,MAAOA,GAAjB,SACE,cAAC,wBAAD,CACEyT,SAAUrH,GACVsH,aAAc5b,IAAaU,aAC3Bmb,eAAe,yBAHjB,SAKE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOzS,KAAK,IAAIgQ,UAAW0C,gBCXrBC,QACW,cAA7B1T,OAAOiQ,SAAS0D,UAEe,UAA7B3T,OAAOiQ,SAAS0D,UAEhB3T,OAAOiQ,SAAS0D,SAAS9R,MACvB,2D,OCZN+R,IAASC,OAAO,cAAC,GAAD,IAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhX,MAAK,SAAAiX,GACjCA,EAAaC,iB,gCEnInB,4RAuBa5V,EAAgB,SAAC1E,GAC5B,MAAO,CACL7D,KAAMsC,IACNuB,UAUS8E,EAAiB,WAC5B,MAAO,CACL3I,KAAMwC,MAWGoG,EAAgB,SAAC/E,GAC5B,MAAO,CACL7D,KAAM0C,IACNmB,UAUSgF,EAAgC,SAAChF,GAC5C,MAAO,CACL7D,KAAMgD,IACNa,UAUSiF,EAAkC,SAACjF,GAC9C,MAAO,CACL7D,KAAMkD,IACNW,UAISuE,EAAkB,SAAC1E,GAC9B,MAAO,CACL1D,KAAM2C,IACNe,YAIS0a,EAAkB,WAC7B,MAAO,CACLpe,KAAM4C,MAIGyb,EAAc,WACzB,MAAO,CACLre,KAAM6C,O,gCCjGV,0KAAO,IAAMtC,EAAoB,4BACpBN,EAAmB,2BACnBS,EAA2B,mCAC3BL,EAAiB,yBACjBS,EAAiB,4B","file":"static/js/main.748b0a78.chunk.js","sourcesContent":["import React from 'react';\nimport { Spin } from 'antd';\nimport PropTypes from 'prop-types'\nimport { LoadingOutlined } from '@ant-design/icons';\n\nconst Icon = <LoadingOutlined style={{ fontSize: 35 }} spin />\n\nconst Loading = (props) => {\n\tconst { align, cover } = props\n\treturn (\n\t\t<div className={`loading text-${align} cover-${cover}`}>\n\t\t\t<Spin indicator={Icon} />\n\t\t</div>\n\t)\n}\n\nLoading.propTypes = {\n\tsize: PropTypes.string,\n\tcover: PropTypes.string\n}\n\nLoading.defaultProps = {\n\talign: 'center',\n\tcover: 'inline'\n};\n\nexport default Loading","import {\n  CLIENTS_RECEIVED,\n  CLIENTS_REQUESTED,\n  CLIENTS_REQUESTED_FAILED,\n  CLIENT_DELETED,\n  CLIENT_UPDATED,\n} from '../constants/Clients';\n\nexport const setClients = clients => {\n  return {\n    type: CLIENTS_RECEIVED,\n    payload: clients,\n  };\n};\nexport const updateClient = client => {\n  return {\n    type: CLIENT_UPDATED,\n    payload: client,\n  };\n};\nexport const fetchingClients = () => {\n  return {\n    type: CLIENTS_REQUESTED,\n  };\n};\nexport const clientsRequestFailed = errorMessage => {\n  return {\n    type: CLIENTS_REQUESTED_FAILED,\n    error: errorMessage,\n  };\n};\nexport const deleteClient = clientId => {\n  return {\n    type: CLIENT_DELETED,\n    payload: clientId,\n  };\n};\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Flex = props => {\n\tconst { children, className, alignItems, justifyContent, mobileFlex, flexDirection } = props\n\tconst getFlexResponsive = () => mobileFlex ? 'd-flex' : 'd-md-flex'\n\treturn (\n\t\t<div className={`${getFlexResponsive()} ${className} ${flexDirection?('flex-' + flexDirection): ''} ${alignItems?('align-items-' + alignItems):''} ${justifyContent?('justify-content-' + justifyContent):''}` }>\n\t\t\t{children}\n\t\t</div>\n\t)\n}\n\nFlex.propTypes = {\n\tclassName: PropTypes.string,\n\talignItems: PropTypes.string,\n\tflexDirection: PropTypes.string,\n\tjustifyContent: PropTypes.string,\n\tmobileFlex: PropTypes.bool\n}\n\nFlex.defaultProps = {\n\tmobileFlex: true,\n\tflexDirection: 'row',\n\tclassName: ''\n};\n\n\nexport default Flex\n","import { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\nimport { env } from './EnvironmentConfig'\n\nexport const APP_NAME = 'Emilus';\nexport const API_BASE_URL = env.API_ENDPOINT_URL\nexport const APP_PREFIX_PATH = '/app';\nexport const AUTH_PREFIX_PATH = '/auth';\n\nexport const THEME_CONFIG = {\n\tnavCollapsed: false,\n\tsideNavTheme: SIDE_NAV_LIGHT,\n\tlocale: 'en',\n\tnavType: NAV_TYPE_SIDE,\n\ttopNavColor: '#3e82f7',\n\theaderNavColor: '',\n\tmobileNav: false,\n\tcurrentTheme: 'light'\n};\n","const dev = {\n  API_ENDPOINT_URL: 'https://jsonplaceholder.typicode.com'\n};\n\nconst prod = {\n  API_ENDPOINT_URL: 'https://api.prod.com'\n};\n\nconst test = {\n  API_ENDPOINT_URL: 'https://api.test.com'\n};\n\nconst getEnv = () => {\n\tswitch (process.env.NODE_ENV) {\n\t\tcase 'development':\n\t\t\treturn dev\n\t\tcase 'production':\n\t\t\treturn prod\n\t\tcase 'test':\n\t\t\treturn test\n\t\tdefault:\n\t\t\tbreak;\n\t}\n}\n\nexport const env = getEnv()\n","export const SIGNIN = 'SIGNIN'; \nexport const AUTHENTICATED = 'AUTHENTICATED';\nexport const SIGNOUT = 'SIGNOUT';\nexport const SIGNOUT_SUCCESS = 'SIGNOUT_SUCCESS'\nexport const SIGNUP = 'SIGNUP';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS'\nexport const SHOW_AUTH_MESSAGE = 'SHOW_AUTH_MESSAGE'\nexport const HIDE_AUTH_MESSAGE = 'HIDE_AUTH_MESSAGE'\nexport const SHOW_LOADING = 'SHOW_LOADING'\nexport const AUTH_TOKEN = 'auth_token'\nexport const SIGNIN_WITH_GOOGLE = 'SIGNIN_WITH_GOOGLE'\nexport const SIGNIN_WITH_GOOGLE_AUTHENTICATED = 'SIGNIN_WITH_GOOGLE_AUTHENTICATED'\nexport const SIGNIN_WITH_FACEBOOK = 'SIGNIN_WITH_FACEBOOK'\nexport const SIGNIN_WITH_FACEBOOK_AUTHENTICATED = 'SIGNIN_WITH_FACEBOOK_AUTHENTICATED'","export const ROW_GUTTER = 16;\nexport const SIDE_NAV_WIDTH = 250;\nexport const SIDE_NAV_COLLAPSED_WIDTH = 80;\nexport const SIDE_NAV_LIGHT = 'SIDE_NAV_LIGHT';\nexport const SIDE_NAV_DARK = 'SIDE_NAV_DARK';\nexport const NAV_TYPE_SIDE = 'SIDE'\nexport const NAV_TYPE_TOP = 'TOP'\n","import {\n\tAUTH_TOKEN,\n\tAUTHENTICATED,\n\tSHOW_AUTH_MESSAGE,\n\tHIDE_AUTH_MESSAGE,\n\tSIGNOUT_SUCCESS,\n\tSIGNUP_SUCCESS,\n\tSHOW_LOADING,\n\tSIGNIN_WITH_GOOGLE_AUTHENTICATED,\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED\n} from '../constants/Auth';\n\nconst initState = {\n  loading: false,\n  message: '',\n  showMessage: false,\n  redirect: '',\n  token: localStorage.getItem(AUTH_TOKEN),\n}\n\nconst auth = (state = initState, action) => {\n\tswitch (action.type) {\n\t\tcase AUTHENTICATED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\tredirect: '/',\n\t\t\t\ttoken: action.token\n\t\t\t}\n\t\tcase SHOW_AUTH_MESSAGE: \n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmessage: action.message,\n\t\t\t\tshowMessage: true,\n\t\t\t\tloading: false\n\t\t\t}\n\t\tcase HIDE_AUTH_MESSAGE: \n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmessage: '',\n\t\t\t\tshowMessage: false,\n\t\t\t}\n\t\tcase SIGNOUT_SUCCESS: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttoken: null,\n\t\t\t\tredirect: '/',\n\t\t\t\tloading: false\n\t\t\t}\n\t\t}\n\t\tcase SIGNUP_SUCCESS: {\n\t\t\treturn {\n\t\t\t  ...state,\n\t\t\t  loading: false,\n\t\t\t  token: action.token\n\t\t\t}\n\t\t}\n\t\tcase SHOW_LOADING: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: true\n\t\t\t}\n\t\t}\n\t\tcase SIGNIN_WITH_GOOGLE_AUTHENTICATED: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\ttoken: action.token\n\t\t\t}\n\t\t}\n\t\tcase SIGNIN_WITH_FACEBOOK_AUTHENTICATED: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\ttoken: action.token\n\t\t\t}\n\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default auth","import { CLIENTS_RECEIVED, CLIENTS_REQUESTED_FAILED, CLIENT_DELETED, CLIENT_UPDATED } from '../constants/Clients';\n\nconst initState = {\n  entities: [],\n  isLoading: true,\n  error: null,\n};\n\nconst clients = (state = initState, action) => {\n  switch (action.type) {\n    case CLIENTS_RECEIVED: {\n      return {\n        ...state,\n        isLoading: false,\n        entities: [...action.payload],\n      };\n    }\n    case CLIENT_UPDATED: {\n      const { id } = action.payload;\n      return {\n        ...state,\n        entities: state.entities.map(client => (client.id === id ? action.payload : client)),\n      };\n    }\n    case CLIENT_DELETED: {\n      return {\n        ...state,\n        entities: state.entities.filter(client => client.id !== action.payload),\n      };\n    }\n    case CLIENTS_REQUESTED_FAILED: {\n      return {\n        ...state,\n        error: action.error,\n        isLoading: false,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default clients;\n","export const TOGGLE_COLLAPSED_NAV = 'TOGGLE_COLLAPSED_NAV';\nexport const CHANGE_LOCALE = 'CHANGE_LOCALE';\nexport const SIDE_NAV_STYLE_CHANGE = 'SIDE_NAV_STYLE_CHANGE';\nexport const NAV_TYPE_CHANGE = 'NAV_TYPE_CHANGE';\nexport const TOP_NAV_COLOR_CHANGE = 'TOP_NAV_COLOR_CHANGE';\nexport const HEADER_NAV_COLOR_CHANGE = 'HEADER_NAV_COLOR_CHANGE';\nexport const TOGGLE_MOBILE_NAV = 'TOGGLE_MOBILE_NAV';\nexport const SWITCH_THEME = 'SWITCH_THEME';","import {\n  TOGGLE_COLLAPSED_NAV,\n  CHANGE_LOCALE,\n  SIDE_NAV_STYLE_CHANGE,\n  NAV_TYPE_CHANGE,\n  TOP_NAV_COLOR_CHANGE,\n  HEADER_NAV_COLOR_CHANGE,\n  TOGGLE_MOBILE_NAV,\n  SWITCH_THEME\n} from '../constants/Theme';\nimport { THEME_CONFIG } from 'configs/AppConfig'\n\nconst initTheme = {\n  ...THEME_CONFIG\n};\n\nconst theme = (state = initTheme, action) => {\n  switch (action.type) {\n    case TOGGLE_COLLAPSED_NAV:\n      return {\n        ...state,\n        navCollapsed: action.navCollapsed\n      };\n    case SIDE_NAV_STYLE_CHANGE:\n      return {\n        ...state,\n        sideNavTheme: action.sideNavTheme\n      };\n    case CHANGE_LOCALE:\n      return {\n        ...state,\n        locale: action.locale\n      };\n    case NAV_TYPE_CHANGE:\n      return {\n        ...state,\n        navType: action.navType\n      };\n    case TOP_NAV_COLOR_CHANGE:\n      return {\n        ...state,\n        topNavColor: action.topNavColor\n      };\n    case HEADER_NAV_COLOR_CHANGE:\n      return {\n        ...state,\n        headerNavColor: action.headerNavColor\n      };\n    case TOGGLE_MOBILE_NAV:\n      return {\n        ...state,\n        mobileNav: action.mobileNav\n      };\n    case SWITCH_THEME:\n      return {\n        ...state,\n        currentTheme: action.currentTheme\n      }\n    default:\n      return state;\n  }\n};\n\nexport default theme","import { combineReducers } from 'redux';\nimport Auth from './Auth';\nimport Clients from './Clients';\nimport Theme from './Theme';\n\nconst reducers = combineReducers({\n  theme: Theme,\n  auth: Auth,\n  clients: Clients,\n});\n\nexport default reducers;\n","const FirebaseConfig = {\n  apiKey: 'AIzaSyAOWoRQGoegkmwnCca7B2GG5GUG_ZP1lcM',\n  authDomain: 'emilus.firebaseapp.com',\n  databaseURL: 'https://emilus.firebaseio.com',\n  projectId: 'emilus',\n  storageBucket: 'emilus.appspot.com',\n  messagingSenderId: '807555350717',\n  appId: '1:807555350717:web:145ba7c21af47203a2f7d4',\n  measurementId: 'G-8KE7HJB252',\n};\n\nexport default FirebaseConfig;\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport firebaseConfig from 'configs/FirebaseConfig';\n\nfirebase.initializeApp(firebaseConfig);\n\n// firebase utils\nconst db = firebase.firestore()\nconst auth = firebase.auth();\nconst currentUser = auth.currentUser\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\nconst facebookAuthProvider = new firebase.auth.FacebookAuthProvider();\nconst twitterAuthProvider = new firebase.auth.TwitterAuthProvider();\nconst githubAuthProvider = new firebase.auth.GithubAuthProvider();\n\nexport {\n\tdb,\n\tauth,\n\tcurrentUser,\n\tgoogleAuthProvider,\n\tfacebookAuthProvider,\n\ttwitterAuthProvider,\n\tgithubAuthProvider\n};","import { auth, googleAuthProvider, facebookAuthProvider } from 'auth/FirebaseAuth';\n\nconst FirebaseService = {}\n\nFirebaseService.signInEmailRequest = async (email, password) =>\n\tawait auth.signInWithEmailAndPassword(email, password).then(user => user).catch(err => err);\n\nFirebaseService.signInEmailRequest = async (email, password) =>\n  await auth.signInWithEmailAndPassword(email, password).then(user => user).catch(err => err);\n\t\t\nFirebaseService.signOutRequest = async () =>\n\tawait auth.signOut().then(user => user).catch(err => err);\n\nFirebaseService.signInGoogleRequest = async () =>\n  await auth.signInWithPopup(googleAuthProvider).then(user => user).catch(err => err);\n\nFirebaseService.signInFacebookRequest = async () =>\n  await auth.signInWithPopup(facebookAuthProvider).then(user => user).catch(err => err);\n\nFirebaseService.signUpEmailRequest = async (email, password) =>\n\tawait auth.createUserWithEmailAndPassword(email, password).then(user => user).catch(err => err);\t\n\t\nexport default FirebaseService","import { all, takeEvery, put, fork, call } from 'redux-saga/effects';\nimport {\n\tAUTH_TOKEN,\n\tSIGNIN,\n\tSIGNOUT,\n\tSIGNUP,\n\tSIGNIN_WITH_GOOGLE,\n\tSIGNIN_WITH_FACEBOOK\n} from '../constants/Auth';\nimport {\n\tshowAuthMessage,\n\tauthenticated,\n\tsignOutSuccess,\n\tsignUpSuccess,\n\tsignInWithGoogleAuthenticated,\n\tsignInWithFacebookAuthenticated\n} from \"../actions/Auth\";\n\nimport FirebaseService from 'services/FirebaseService'\n\nexport function* signInWithFBEmail() {\n  yield takeEvery(SIGNIN, function* ({payload}) {\n\t\tconst {email, password} = payload;\n\t\ttry {\n\t\t\tconst user = yield call(FirebaseService.signInEmailRequest, email, password);\n\t\t\tif (user.message) {\n\t\t\t\tyield put(showAuthMessage(user.message));\n\t\t\t} else {\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\n\t\t\t\tyield put(authenticated(user.user.uid));\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tyield put(showAuthMessage(err));\n\t\t}\n\t});\n}\n\nexport function* signOut() {\n  yield takeEvery(SIGNOUT, function* () {\n\t\ttry {\n\t\t\tconst signOutUser = yield call(FirebaseService.signOutRequest);\n\t\t\tif (signOutUser === undefined) {\n\t\t\t\tlocalStorage.removeItem(AUTH_TOKEN);\n\t\t\t\tyield put(signOutSuccess(signOutUser));\n\t\t\t} else {\n\t\t\t\tyield put(showAuthMessage(signOutUser.message));\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tyield put(showAuthMessage(err));\n\t\t}\n\t});\n}\n\nexport function* signUpWithFBEmail() {\n  yield takeEvery(SIGNUP, function* ({payload}) {\n\t\tconst {email, password} = payload;\n\t\ttry {\n\t\t\tconst user = yield call(FirebaseService.signUpEmailRequest, email, password);\n\t\t\tif (user.message) {\n\t\t\t\tyield put(showAuthMessage(user.message));\n\t\t\t} else {\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\n\t\t\t\tyield put(signUpSuccess(user.user.uid));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tyield put(showAuthMessage(error));\n\t\t}\n\t}\n\t);\n}\n\nexport function* signInWithFBGoogle() {\n  yield takeEvery(SIGNIN_WITH_GOOGLE, function* () {\n\t\ttry {\n\t\t\tconst user = yield call(FirebaseService.signInGoogleRequest);\n\t\t\tif (user.message) {\n\t\t\t\tyield put(showAuthMessage(user.message));\n\t\t\t} else {\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\n\t\t\t\tyield put(signInWithGoogleAuthenticated(user.user.uid));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tyield put(showAuthMessage(error));\n\t\t}\n\t});\n}\n\nexport function* signInWithFacebook() {\n  yield takeEvery(SIGNIN_WITH_FACEBOOK, function* () {\n\t\ttry {\n\t\t\tconst user = yield call(FirebaseService.signInFacebookRequest);\n\t\t\tif (user.message) {\n\t\t\t\tyield put(showAuthMessage(user.message));\n\t\t\t} else {\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\n\t\t\t\tyield put(signInWithFacebookAuthenticated(user.user.uid));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tyield put(showAuthMessage(error));\n\t\t}\n\t});\n}\n\nexport default function* rootSaga() {\n  yield all([\n\t\tfork(signInWithFBEmail),\n\t\tfork(signOut),\n\t\tfork(signUpWithFBEmail),\n\t\tfork(signInWithFBGoogle),\n\t\tfork(signInWithFacebook)\n  ]);\n}\n","// import fetch from 'auth/FetchInterceptor';\n\nconst clientsEndPoint = 'https://jsonplaceholder.typicode.com/users';\n\nconst ClientService = {\n  getAll: async () => {\n    // const data = await fetch({ url: clientsEndPoint });\n    const response = await fetch(clientsEndPoint);\n    const data = await response.json();\n    return data;\n  },\n};\n\nexport default ClientService;\n","import { all, call, fork, put, takeEvery } from 'redux-saga/effects';\nimport ClientService from 'services/ClientsService';\nimport { clientsRequestFailed, setClients } from '../actions/Clients';\nimport { CLIENTS_REQUESTED } from '../constants/Clients';\n\nexport function* getClients() {\n  yield takeEvery(CLIENTS_REQUESTED, function* () {\n    try {\n      const clients = yield call(ClientService.getAll);\n      if (clients) {\n        yield put(setClients(clients));\n      }\n    } catch (err) {\n      yield put(clientsRequestFailed(err.message));\n    }\n  });\n}\n\nexport default function* rootSaga() {\n  yield all([fork(getClients)]);\n}\n","import { all } from 'redux-saga/effects';\nimport Auth from './Auth';\nimport Clients from './Clients';\n\nexport default function* rootSaga(getState) {\n  yield all([Auth(), Clients()]);\n}\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport reducers from \"../reducers\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"../sagas/index\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware];\n\nfunction configureStore(preloadedState) {\n \n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const store = createStore(reducers, preloadedState, composeEnhancers(\n    applyMiddleware(...middlewares)\n  ));\n\n  sagaMiddleware.run(rootSaga);\n\n  if (module.hot) {\n    module.hot.accept(\"../reducers/index\", () => {\n      const nextRootReducer = require(\"../reducers/index\");\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n\n  return store;\n}\n\nconst store = configureStore();\n\nexport default store;\n\n","import React from \"react\";\nimport {FormattedMessage, injectIntl} from \"react-intl\";\n\nconst IntlMessage = props => <FormattedMessage {...props} />;\nexport default injectIntl(IntlMessage, {\n  withRef: false\n});\n","import React, { Component } from 'react'\n\nexport class Icon extends Component {\n\trender() {\n\t\tconst { type, className  } = this.props;\n\t\treturn (\n\t\t\t<>{React.createElement(type, { className: className })}</>\n\t\t)\n\t}\n}\n\nexport default Icon\n","import { DashboardOutlined, UserOutlined, AppstoreOutlined } from '@ant-design/icons';\nimport { APP_PREFIX_PATH } from 'configs/AppConfig';\n\nconst dashBoardNavTree = [\n  {\n    key: 'home',\n    path: `${APP_PREFIX_PATH}/home`,\n    title: 'home',\n    icon: DashboardOutlined,\n    breadcrumb: false,\n    submenu: [],\n  },\n];\n\nconst extraNavTree = [\n  {\n    key: 'extra',\n    path: `${APP_PREFIX_PATH}/pages`,\n    title: 'sidenav.pages',\n    icon: '',\n    breadcrumb: true,\n    submenu: [\n      {\n        key: 'extra-pages',\n        path: `${APP_PREFIX_PATH}/pages`,\n        title: 'Clients',\n        icon: UserOutlined,\n        breadcrumb: true,\n        submenu: [\n          {\n            key: 'extra-pages-list',\n            path: `${APP_PREFIX_PATH}/pages/client-list`,\n            title: 'Clients List',\n            icon: '',\n            breadcrumb: true,\n            submenu: [],\n          },\n        ],\n      },\n    ],\n  },\n];\n\nconst appsNavTree = [\n  {\n    key: 'apps',\n    path: `${APP_PREFIX_PATH}/apps`,\n    title: 'sidenav.apps',\n    breadcrumb: false,\n    submenu: [\n      {\n        key: 'apps-scheduler',\n        path: `${APP_PREFIX_PATH}/apps/scheduler`,\n        title: 'Scheduler',\n        icon: AppstoreOutlined,\n        breadcrumb: false,\n        submenu: [],\n      },\n    ],\n  },\n];\n\nconst navigationConfig = [...dashBoardNavTree, ...extraNavTree, ...appsNavTree];\n\nexport default navigationConfig;\n","class Utils {\n\n\t/**\n\t * Get first character from first & last sentences of a username\n\t * @param {String} name - Username\n\t * @return {String} 2 characters string\n\t */\n\tstatic getNameInitial(name) {\n\t\tlet initials = name.match(/\\b\\w/g) || [];\n\t\treturn ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\n\t}\n\n\t/**\n\t * Get current path related object from Navigation Tree\n\t * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\n\t * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\n\t * @return {Object} object that contained the path string\n\t */\n\tstatic getRouteInfo(navTree, path) {\n\t\tif( navTree.path === path ){\n\t\t  return navTree;\n\t\t}\n\t\tlet route; \n\t\tfor (let p in navTree) {\n\t\t  if( navTree.hasOwnProperty(p) && typeof navTree[p] === 'object' ) {\n\t\t\t\troute = this.getRouteInfo(navTree[p], path);\n\t\t\t\tif(route){\n\t\t\t\t\treturn route;\n\t\t\t\t}\n\t\t  }\n\t\t}\n\t\treturn route;\n\t}\t\n\n\t/**\n\t * Get accessible color contrast\n\t * @param {String} hex - Hex color code e.g '#3e82f7'\n\t * @return {String} 'dark' or 'light'\n\t */\n\tstatic getColorContrast(hex){\n\t\tif(!hex) {\n\t\t\treturn 'dark'\n\t\t}\n\t\tconst threshold = 130;\n\t\tconst hRed = hexToR(hex);\n\t\tconst hGreen = hexToG(hex);\n\t\tconst hBlue = hexToB(hex);\n\t\tfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)}\n\t\tfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)}\n\t\tfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)}\n\t\tfunction cutHex(h) {return (h.charAt(0) === '#') ? h.substring(1,7):h}\n\t\tconst cBrightness = ((hRed * 299) + (hGreen * 587) + (hBlue * 114)) / 1000;\n\t\tif (cBrightness > threshold){\n\t\t\treturn 'dark'\n\t\t} else { \n\t\t\treturn 'light'\n\t\t}\t\n\t}\n\n\t/**\n\t * Darken or lighten a hex color \n\t * @param {String} color - Hex color code e.g '#3e82f7'\n\t * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\n\t * @return {String} Darken or lighten color \n\t */\n\tstatic shadeColor(color, percent) {\n\t\tlet R = parseInt(color.substring(1,3),16);\n\t\tlet G = parseInt(color.substring(3,5),16);\n\t\tlet B = parseInt(color.substring(5,7),16);\n\t\tR = parseInt(R * (100 + percent) / 100);\n\t\tG = parseInt(G * (100 + percent) / 100);\n\t\tB = parseInt(B * (100 + percent) / 100);\n\t\tR = (R<255)?R:255;  \n\t\tG = (G<255)?G:255;  \n\t\tB = (B<255)?B:255;  \n\t\tconst RR = ((R.toString(16).length === 1) ? `0${R.toString(16)}` : R.toString(16));\n\t\tconst GG = ((G.toString(16).length === 1) ? `0${G.toString(16)}` : G.toString(16));\n\t\tconst BB = ((B.toString(16).length === 1) ? `0${B.toString(16)}` : B.toString(16));\n\t\treturn `#${RR}${GG}${BB}`; \n\t}\n\n\t/**\n\t * Convert RGBA to HEX \n\t * @param {String} rgba - RGBA color code e.g 'rgba(197, 200, 198, .2)')'\n\t * @return {String} HEX color \n\t */\n\tstatic rgbaToHex(rgba) {\n\t\tconst trim = str => (str.replace(/^\\s+|\\s+$/gm,''))\n\t\tconst inParts = rgba.substring(rgba.indexOf(\"(\")).split(\",\"),\n\t\t\tr = parseInt(trim(inParts[0].substring(1)), 10),\n\t\t\tg = parseInt(trim(inParts[1]), 10),\n\t\t\tb = parseInt(trim(inParts[2]), 10),\n\t\t\ta = parseFloat(trim(inParts[3].substring(0, inParts[3].length - 1))).toFixed(2);\n\t\t\tconst outParts = [\n\t\t\tr.toString(16),\n\t\t\tg.toString(16),\n\t\t\tb.toString(16),\n\t\t\tMath.round(a * 255).toString(16).substring(0, 2)\n\t\t];\n\n\t\toutParts.forEach(function (part, i) {\n\t\t\tif (part.length === 1) {\n\t\t\t\toutParts[i] = '0' + part;\n\t\t\t}\n\t\t})\n\t\treturn (`#${outParts.join('')}`);\n\t}\n\n\t/**\n\t * Returns either a positive or negative \n\t * @param {Number} number - number value\n\t * @param {any} positive - value that return when positive\n\t * @param {any} negative - value that return when negative\n\t * @return {any} positive or negative value based on param\n\t */\n\tstatic getSignNum(number, positive, negative) {\n\t\tif (number > 0) {\n\t\t\treturn positive\n\t\t}\n\t\tif (number < 0) {\n\t\t\treturn negative\n\t\t}\n\t\treturn null\n\t}\n\n\t/**\n\t * Returns either ascending or descending value\n\t * @param {Object} a - antd Table sorter param a\n\t * @param {Object} b - antd Table sorter param b\n\t * @param {String} key - object key for compare\n\t * @return {any} a value minus b value\n\t */\n\tstatic antdTableSorter(a, b, key) {\n\t\tif(typeof a[key] === 'number' && typeof b[key] === 'number') {\n\t\t\treturn a[key] - b[key]\n\t\t}\n\n\t\tif(typeof a[key] === 'string' && typeof b[key] === 'string') {\n\t\t\ta = a[key].toLowerCase();\n\t\t\tb = b[key].toLowerCase();\n\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\n\t\t}\n\t\treturn\n\t}\n\n\t/**\n\t * Filter array of object \n\t * @param {Array} list - array of objects that need to filter\n\t * @param {String} key - object key target\n\t * @param {any} value  - value that excluded from filter\n\t * @return {Array} a value minus b value\n\t */\n\tstatic filterArray(list, key, value) {\n\t\tlet data = list\n\t\tif(list) {\n\t\t\tdata = list.filter(item => item[key] === value)\n\t\t}\n\t\treturn data\n\t}\n\n\t/**\n\t * Remove object from array by value\n\t * @param {Array} list - array of objects\n\t * @param {String} key - object key target\n\t * @param {any} value  - target value\n\t * @return {Array} Array that removed target object\n\t */\n\tstatic deleteArrayRow(list, key, value) {\n\t\tlet data = list\n\t\tif(list) {\n\t\t\tdata = list.filter(item => item[key] !== value)\n\t\t}\n\t\treturn data\n\t}\n\n\t/**\n\t * Wild card search on all property of the object\n\t * @param {Number | String} input - any value to search\n\t * @param {Array} list - array for search\n\t * @return {Array} array of object contained keyword\n\t */\n\tstatic wildCardSearch(list, input) {\n\t\tconst searchText = (item) => {\n\t\t\tfor (let key in item) {\n\t\t\t\tif (item[key] == null) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (item[key].toString().toUpperCase().indexOf(input.toString().toUpperCase()) !== -1) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tlist = list.filter(value => searchText(value));\n\t\treturn list;\n\t}\n\n\t/**\n\t * Get Breakpoint\n\t * @param {Object} screens - Grid.useBreakpoint() from antd\n\t * @return {Array} array of breakpoint size\n\t */\n\tstatic getBreakPoint(screens) {\n\t\tlet breakpoints = []\n\t\tfor (const key in screens) {\n\t\t\tif (screens.hasOwnProperty(key)) {\n\t\t\t\tconst element = screens[key];\n\t\t\t\tif (element) {\n\t\t\t\t\tbreakpoints.push(key)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn breakpoints\n\t}\n}\n\nexport default Utils;","import {\n  TOGGLE_COLLAPSED_NAV,\n  SIDE_NAV_STYLE_CHANGE,\n  CHANGE_LOCALE,\n  NAV_TYPE_CHANGE,\n  TOP_NAV_COLOR_CHANGE,\n  HEADER_NAV_COLOR_CHANGE,\n  TOGGLE_MOBILE_NAV,\n  SWITCH_THEME\n} from '../constants/Theme';\n\nexport function toggleCollapsedNav(navCollapsed) {\n  return {\n    type: TOGGLE_COLLAPSED_NAV,\n    navCollapsed\n  };\n}\n\nexport function onNavStyleChange(sideNavTheme) {\n  return {\n    type: SIDE_NAV_STYLE_CHANGE,\n    sideNavTheme\n  };\n}\n\nexport function onLocaleChange(locale) {\n  return {\n    type: CHANGE_LOCALE,\n    locale\n  };\n}\n\nexport function onNavTypeChange(navType) {\n  return {\n    type: NAV_TYPE_CHANGE,\n    navType\n  };\n}\n\nexport function onTopNavColorChange(topNavColor) {\n  return {\n    type: TOP_NAV_COLOR_CHANGE,\n    topNavColor\n  };\n}\n\nexport function onHeaderNavColorChange(headerNavColor) {\n  return {\n    type: HEADER_NAV_COLOR_CHANGE,\n    headerNavColor\n  };\n}\n\nexport function onMobileNavToggle(mobileNav) {\n  return {\n    type: TOGGLE_MOBILE_NAV,\n    mobileNav\n  };\n}\n\nexport function onSwitchTheme(currentTheme) {\n  return {\n    type: SWITCH_THEME,\n    currentTheme\n  };\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Menu, Grid } from \"antd\";\nimport IntlMessage from \"../util-components/IntlMessage\";\nimport Icon from \"../util-components/Icon\";\nimport navigationConfig from \"configs/NavigationConfig\";\nimport { connect } from \"react-redux\";\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\nimport utils from 'utils'\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\n\nconst { SubMenu } = Menu;\nconst { useBreakpoint } = Grid;\n\nconst setLocale = (isLocaleOn, localeKey) =>\n  isLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\n\nconst setDefaultOpen = (key) => {\n  let keyList = [];\n  let keyString = \"\";\n  if (key) {\n    const arr = key.split(\"-\");\n    for (let index = 0; index < arr.length; index++) {\n      const elm = arr[index];\n      index === 0 ? (keyString = elm) : (keyString = `${keyString}-${elm}`);\n      keyList.push(keyString);\n    }\n  }\n  return keyList;\n};\n\nconst SideNavContent = (props) => {\n\tconst { sideNavTheme, routeInfo, hideGroupTitle, localization, onMobileNavToggle } = props;\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\n\tconst closeMobileNav = () => {\n\t\tif (isMobile) {\n\t\t\tonMobileNavToggle(false)\n\t\t}\n\t}\n  return (\n    <Menu\n      theme={sideNavTheme === SIDE_NAV_LIGHT ? \"light\" : \"dark\"}\n      mode=\"inline\"\n      style={{ height: \"100%\", borderRight: 0 }}\n      defaultSelectedKeys={[routeInfo?.key]}\n      defaultOpenKeys={setDefaultOpen(routeInfo?.key)}\n      className={hideGroupTitle ? \"hide-group-title\" : \"\"}\n    >\n      {navigationConfig.map((menu) =>\n        menu.submenu.length > 0 ? (\n          <Menu.ItemGroup\n            key={menu.key}\n            title={setLocale(localization, menu.title)}\n          >\n            {menu.submenu.map((subMenuFirst) =>\n              subMenuFirst.submenu.length > 0 ? (\n                <SubMenu\n                  icon={\n                    subMenuFirst.icon ? (\n                      <Icon type={subMenuFirst?.icon} />\n                    ) : null\n                  }\n                  key={subMenuFirst.key}\n                  title={setLocale(localization, subMenuFirst.title)}\n                >\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\n                    <Menu.Item key={subMenuSecond.key}>\n                      {subMenuSecond.icon ? (\n                        <Icon type={subMenuSecond?.icon} />\n                      ) : null}\n                      <span>\n                        {setLocale(localization, subMenuSecond.title)}\n                      </span>\n                      <Link onClick={() => closeMobileNav()} to={subMenuSecond.path} />\n                    </Menu.Item>\n                  ))}\n                </SubMenu>\n              ) : (\n                <Menu.Item key={subMenuFirst.key}>\n                  {subMenuFirst.icon ? <Icon type={subMenuFirst.icon} /> : null}\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\n                  <Link onClick={() => closeMobileNav()} to={subMenuFirst.path} />\n                </Menu.Item>\n              )\n            )}\n          </Menu.ItemGroup>\n        ) : (\n          <Menu.Item key={menu.key}>\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\n            <span>{setLocale(localization, menu?.title)}</span>\n            {menu.path ? <Link onClick={() => closeMobileNav()} to={menu.path} /> : null}\n          </Menu.Item>\n        )\n      )}\n    </Menu>\n  );\n};\n\nconst TopNavContent = (props) => {\n  const { topNavColor, localization } = props;\n  return (\n    <Menu mode=\"horizontal\" style={{ backgroundColor: topNavColor }}>\n      {navigationConfig.map((menu) =>\n        menu.submenu.length > 0 ? (\n          <SubMenu\n            key={menu.key}\n            popupClassName=\"top-nav-menu\"\n            title={\n              <span>\n                {menu.icon ? <Icon type={menu?.icon} /> : null}\n                <span>{setLocale(localization, menu.title)}</span>\n              </span>\n            }\n          >\n            {menu.submenu.map((subMenuFirst) =>\n              subMenuFirst.submenu.length > 0 ? (\n                <SubMenu\n                  key={subMenuFirst.key}\n                  icon={\n                    subMenuFirst.icon ? (\n                      <Icon type={subMenuFirst?.icon} />\n                    ) : null\n                  }\n                  title={setLocale(localization, subMenuFirst.title)}\n                >\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\n                    <Menu.Item key={subMenuSecond.key}>\n                      <span>\n                        {setLocale(localization, subMenuSecond.title)}\n                      </span>\n                      <Link to={subMenuSecond.path} />\n                    </Menu.Item>\n                  ))}\n                </SubMenu>\n              ) : (\n                <Menu.Item key={subMenuFirst.key}>\n                  {subMenuFirst.icon ? (\n                    <Icon type={subMenuFirst?.icon} />\n                  ) : null}\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\n                  <Link to={subMenuFirst.path} />\n                </Menu.Item>\n              )\n            )}\n          </SubMenu>\n        ) : (\n          <Menu.Item key={menu.key}>\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\n            <span>{setLocale(localization, menu?.title)}</span>\n            {menu.path ? <Link to={menu.path} /> : null}\n          </Menu.Item>\n        )\n      )}\n    </Menu>\n  );\n};\n\nconst MenuContent = (props) => {\n  return props.type === NAV_TYPE_SIDE ? (\n    <SideNavContent {...props} />\n  ) : (\n    <TopNavContent {...props} />\n  );\n};\n\nconst mapStateToProps = ({ theme }) => {\n  const { sideNavTheme, topNavColor } = theme;\n  return { sideNavTheme, topNavColor };\n};\n\nexport default connect(mapStateToProps, { onMobileNavToggle })(MenuContent);\n","import React from \"react\";\nimport { Layout } from 'antd';\nimport { connect } from 'react-redux';\nimport { SIDE_NAV_WIDTH, SIDE_NAV_DARK, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport MenuContent from './MenuContent'\n\nconst { Sider } = Layout;\n\nexport const SideNav = ({navCollapsed, sideNavTheme, routeInfo, hideGroupTitle, localization = true }) => {\n  const props = { sideNavTheme, routeInfo , hideGroupTitle, localization}\n  return (\n    <Sider \n      className={`side-nav ${sideNavTheme === SIDE_NAV_DARK? 'side-nav-dark' : ''}`} \n      width={SIDE_NAV_WIDTH} \n      collapsed={navCollapsed}\n    >\n      <Scrollbars autoHide>\n        <MenuContent \n          type={NAV_TYPE_SIDE} \n          {...props}\n        />\n      </Scrollbars>\n    </Sider>\n  )\n}\n\nconst mapStateToProps = ({ theme }) => {\n  const { navCollapsed, sideNavTheme } =  theme;\n  return { navCollapsed, sideNavTheme }\n};\n\nexport default connect(mapStateToProps)(SideNav);\n","import React from 'react'\nimport { connect } from 'react-redux';\nimport { NAV_TYPE_TOP } from 'constants/ThemeConstant';\nimport utils from 'utils'\nimport MenuContent from './MenuContent'\n\nexport const TopNav = ({topNavColor, localization = true}) => {\n\tconst props = { topNavColor, localization }\n\treturn (\n\t\t<div className={`top-nav ${utils.getColorContrast(topNavColor)}`} style={{backgroundColor: topNavColor}}>\n\t\t\t<div className=\"top-nav-wrapper\">\n\t\t\t\t<MenuContent\n\t\t\t\t\ttype={NAV_TYPE_TOP} \n\t\t\t\t\t{...props}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nconst mapStateToProps = ({ theme }) => {\n  const { topNavColor } =  theme;\n  return { topNavColor }\n};\n\nexport default connect(mapStateToProps)(TopNav);\n","import React from 'react'\nimport { SIDE_NAV_WIDTH, SIDE_NAV_COLLAPSED_WIDTH, NAV_TYPE_TOP } from 'constants/ThemeConstant';\nimport { APP_NAME } from 'configs/AppConfig';\nimport { connect } from \"react-redux\";\nimport utils from 'utils';\nimport { Grid } from 'antd';\n\nconst { useBreakpoint } = Grid;\n\nconst getLogoWidthGutter = (props, isMobile) => {\n  const { navCollapsed, navType } = props;\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\n  if(isMobile && !props.mobileLogo) {\n    return 0\n  }\n  if(isNavTop) {\n    return 'auto'\n  }\n  if(navCollapsed) {\n    return `${SIDE_NAV_COLLAPSED_WIDTH}px`\n  } else {\n    return `${SIDE_NAV_WIDTH}px`\n  }\n}\n\nconst getLogo = (props) => {\n  const { navCollapsed, logoType } = props;\n  if(logoType === 'light') {\n    if(navCollapsed) {\n      return '/img/logo-sm-white.png'\n    }\n    return '/img/logo-white.png'\n  }\n\n  if (navCollapsed) {\n    return '/img/logo-sm.png'\n  }\n  return '/img/logo.png'\n}\n\nconst getLogoDisplay = (isMobile, mobileLogo) => {\n  if(isMobile && !mobileLogo) {\n    return 'd-none'\n  } else {\n    return 'logo'\n  }\n}\n\nexport const Logo = (props) => {\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\n  return (\n    <div\n      className={getLogoDisplay(isMobile, props.mobileLogo)} \n      style={{width: `${getLogoWidthGutter(props, isMobile)}`}}>\n      <img src={getLogo(props)} alt={`${APP_NAME} logo`}/>\n    </div>\n  )\n}\n\nconst mapStateToProps = ({ theme }) => {\n  const { navCollapsed, navType } =  theme;\n  return { navCollapsed, navType }\n};\n\nexport default connect(mapStateToProps)(Logo);\n","import React from \"react\";\nimport { Drawer } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport MenuContent from \"./MenuContent\";\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\nimport Logo from \"./Logo\";\nimport Flex from \"components/shared-components/Flex\";\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\n\nexport const MobileNav = ({\n  sideNavTheme,\n  mobileNav,\n  onMobileNavToggle,\n  routeInfo,\n  hideGroupTitle,\n  localization = true,\n}) => {\n  const props = { sideNavTheme, routeInfo, hideGroupTitle, localization };\n\n  const onClose = () => {\n    onMobileNavToggle(false);\n  };\n\n  return (\n    <Drawer\n      placement=\"left\"\n      closable={false}\n      onClose={onClose}\n      visible={mobileNav}\n      bodyStyle={{ padding: 5 }}\n    >\n      <Flex flexDirection=\"column\" className=\"h-100\">\n        <Flex justifyContent=\"between\" alignItems=\"center\">\n          <Logo mobileLogo={true} />\n          <div className=\"nav-close\" onClick={() => onClose()}>\n            <ArrowLeftOutlined />\n          </div>\n        </Flex>\n        <div className=\"mobile-nav-menu\">\n          <Scrollbars autoHide>\n            <MenuContent type={NAV_TYPE_SIDE} {...props} />\n          </Scrollbars>\n        </div>\n      </Flex>\n    </Drawer>\n  );\n};\n\nconst mapStateToProps = ({ theme }) => {\n  const { navCollapsed, sideNavTheme, mobileNav } = theme;\n  return { navCollapsed, sideNavTheme, mobileNav };\n};\n\nexport default connect(mapStateToProps, { onMobileNavToggle })(MobileNav);\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types'\nimport { SketchPicker } from 'react-color';\n\nconst ColorPicker = props => {\n\n\tconst { colorChange, color='' } = props\n\n\tconst [visible, setVisible] = useState(false);\n\tconst [pickerColor, setPickerColor] = useState(color)\n\tconst [boxColor, setBoxColor] = useState(color)\n\n\tuseEffect(() => {\n\t\tsetBoxColor(color);\n\t\tsetPickerColor(color)\n\t}, [color]);\n\n\tconst onPickerDropdown = () => {\n\t\tsetVisible(!visible)\n\t}\n\n\tconst onColorChange = (value) => {\n\t\tconst {rgb} = value\n\t\tconst rgba = `rgb(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\n\t\tsetBoxColor(rgba)\n\t\tsetPickerColor(rgb)\n\t\tcolorChange(value)\n\t}\n\n\treturn (\n\t\t<div className=\"color-picker\">\n\t\t\t<div className=\"color-picker-dropdown\">\n\t\t\t\t<div className=\"color\" style={{backgroundColor: boxColor ? boxColor : '#ffffff'}} onClick={onPickerDropdown} />\n\t\t\t</div>\n\t\t\t{\n\t\t\t\tvisible && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<div className=\"color-picker-backdrop\" onClick={onPickerDropdown}/>\n\t\t\t\t\t\t<SketchPicker color={pickerColor} onChange={onColorChange}/>\n\t\t\t\t\t</>\n\t\t\t\t)\n\t\t\t}\n\t\t</div>\n\t)\n}\n\nColorPicker.propTypes = {\n\tcolor: PropTypes.string,\n\tcolorChange: PropTypes.func\n}\n\n\nexport default ColorPicker;\n","import React from \"react\";\nimport { CheckOutlined, GlobalOutlined, DownOutlined  } from '@ant-design/icons';\nimport { Menu, Dropdown } from \"antd\";\nimport lang from \"assets/data/language.data.json\";\nimport { connect } from \"react-redux\";\nimport { onLocaleChange } from 'redux/actions/Theme'\n\nfunction getLanguageDetail (locale) {\n\tconst data = lang.filter(elm => (elm.langId === locale))\n\treturn data[0]\n}\n\nconst SelectedLanguage = ({ locale }) => {\n\tconst language = getLanguageDetail(locale)\n\tconst {langName, icon} = language\n\treturn (\n\t\t<div className=\"d-flex align-items-center\">\n\t\t\t<img style={{maxWidth: '20px'}} src={`/img/flags/${icon}.png`} alt={langName}/>\n\t\t\t<span className=\"font-weight-semibold ml-2\">{langName} <DownOutlined className=\"font-size-xs\"/></span>\n\t\t</div>\n\t)\n}\n\nexport const NavLanguage = ({ locale, configDisplay, onLocaleChange }) => {\n\tconst languageOption = (\n\t\t<Menu>\n\t\t\t{\n\t\t\t\tlang.map((elm, i) => {return (\n\t\t\t\t\t<Menu.Item \n\t\t\t\t\t\tkey={i} \n\t\t\t\t\t\tclassName={locale === elm.langId? 'ant-dropdown-menu-item-active': ''} \n\t\t\t\t\t\tonClick={() => onLocaleChange(elm.langId)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<span className=\"d-flex justify-content-between align-items-center\">\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<img style={{maxWidth: '20px'}} src={`/img/flags/${elm.icon}.png`} alt={elm.langName}/>\n\t\t\t\t\t\t\t\t<span className=\"font-weight-normal ml-2\">{elm.langName}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{locale === elm.langId? <CheckOutlined className=\"text-success\" /> : null}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</Menu.Item>\n\t\t\t\t)})\n\t\t\t}\n\t\t</Menu>\n\t)\n\treturn (\n\t\t<Dropdown placement=\"bottomRight\" overlay={languageOption} trigger={[\"click\"]}>\n\t\t\t{\n\t\t\t\tconfigDisplay ?\n\t\t\t\t(\n\t\t\t\t\t<a href=\"#/\" className=\"text-gray\" onClick={e => e.preventDefault()}>\n\t\t\t\t\t\t<SelectedLanguage locale={locale}/>\n\t\t\t\t\t</a>\n\t\t\t\t)\n\t\t\t\t:\n\t\t\t\t(\n\t\t\t\t\t<Menu mode=\"horizontal\">\n\t\t\t\t\t\t<Menu.Item>\n\t\t\t\t\t\t\t<a href=\"#/\" onClick={e => e.preventDefault()}>\n\t\t\t\t\t\t\t\t<GlobalOutlined className=\"nav-icon mr-0\" />\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t</Menu>\n\t\t\t\t)\n\t\t\t}\n\t\t</Dropdown>\n\t)\n}\n\nconst mapStateToProps = ({ theme }) => {\n  const { locale } =  theme;\n  return { locale }\n};\n\nexport default connect(mapStateToProps, {onLocaleChange})(NavLanguage);\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Radio, Switch, Button, message } from 'antd';\nimport { \n\ttoggleCollapsedNav, \n\tonNavTypeChange,\n\tonNavStyleChange,\n\tonTopNavColorChange,\n\tonHeaderNavColorChange,\n\tonSwitchTheme\n} from 'redux/actions/Theme';\nimport { CopyOutlined } from '@ant-design/icons';\nimport ColorPicker from 'components/shared-components/ColorPicker';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport NavLanguage from './NavLanguage';\nimport { \n\tSIDE_NAV_LIGHT,\n\tNAV_TYPE_SIDE,\n\tNAV_TYPE_TOP,\n\tSIDE_NAV_DARK\n} from 'constants/ThemeConstant';\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\nimport utils from 'utils/index';\n\nconst colorOptions = [\n\t'#3e82f7',\n\t'#24a772',\n\t'#de4436',\n\t'#924aca',\n\t'#193550'\n]\n\nconst ListOption = ({name, selector, disabled, vertical}) => (\n\t<div className={`my-4 ${vertical? '' : 'd-flex align-items-center justify-content-between'}`}>\n\t\t<div className={`${disabled ? 'opacity-0-3' : ''} ${vertical? 'mb-3' : ''}`}>{name}</div>\n\t\t<div>{selector}</div>\n\t</div>\n)\n\nexport const ThemeConfigurator = ({ \n\tnavType, \n\tsideNavTheme, \n\tnavCollapsed,\n\ttopNavColor,\n\theaderNavColor,\n\tlocale,\n\tcurrentTheme,\n\ttoggleCollapsedNav, \n\tonNavTypeChange, \n\tonNavStyleChange,\n\tonTopNavColorChange,\n\tonHeaderNavColorChange,\n\tonSwitchTheme\n}) => {\n\tconst isNavTop = navType === NAV_TYPE_TOP? true : false\n\tconst isCollapse = navCollapsed \n\n\tconst { switcher, themes } = useThemeSwitcher();\n\n\tconst toggleTheme = (isChecked) => {\n\t\tonHeaderNavColorChange('')\n\t\tconst changedTheme = isChecked ? 'dark' : 'light'\n\t\tonSwitchTheme(changedTheme)\n    switcher({ theme: themes[changedTheme] });\n  };\n\n\tconst ontopNavColorClick = (value) => {\n\t\tonHeaderNavColorChange('')\n\t\tconst { rgb } = value\n\t\tconst rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\n\t\tconst hex = utils.rgbaToHex(rgba)\n\t\tonTopNavColorChange(hex)\n\t}\n\tconst onHeaderNavColorClick = (value) => {\n\t\tconst { rgb } = value\n\t\tconst rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\n\t\tconst hex = utils.rgbaToHex(rgba)\n\t\tonHeaderNavColorChange(hex)\n\t}\n\n\tconst onNavTypeClick = (value) => {\n\t\tonHeaderNavColorChange('')\n\t\tif(value === NAV_TYPE_TOP) {\n\t\t\tonTopNavColorChange(colorOptions[0])\n\t\t\ttoggleCollapsedNav(false)\n\t\t}\n\t\tonNavTypeChange(value)\n\t}\n\n\tconst genCopySettingJson = (configState) => JSON.stringify(configState, null, 2);\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"mb-5\">\n\t\t\t\t<h4 className=\"mb-3 font-weight-bold\">Navigation</h4>\n\t\t\t\t{\n\t\t\t\t\tisNavTop ?\n\t\t\t\t\t<ListOption \n\t\t\t\t\t\tname=\"Top Nav Color:\"\n\t\t\t\t\t\tvertical\n\t\t\t\t\t\tselector={\n\t\t\t\t\t\t\t<ColorPicker color={topNavColor} colorChange={ontopNavColorClick}/>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t:\n\t\t\t\t\t<ListOption \n\t\t\t\t\t\tname=\"Header Nav Color:\"\n\t\t\t\t\t\tvertical\n\t\t\t\t\t\tselector={\n\t\t\t\t\t\t\t<ColorPicker color={headerNavColor} colorChange={onHeaderNavColorClick}/>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t<ListOption \n\t\t\t\t\tname=\"Navigation Type:\"\n\t\t\t\t\tselector={\n\t\t\t\t\t\t<Radio.Group \n\t\t\t\t\t\t\tsize=\"small\" \n\t\t\t\t\t\t\tonChange={e => onNavTypeClick(e.target.value)} \n\t\t\t\t\t\t\tvalue={navType}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Radio.Button value={NAV_TYPE_SIDE}>Side</Radio.Button>\n\t\t\t\t\t\t\t<Radio.Button value={NAV_TYPE_TOP}>Top</Radio.Button>\n\t\t\t\t\t\t</Radio.Group>\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<ListOption \n\t\t\t\t\tname=\"Side Nav Color:\"\n\t\t\t\t\tselector={\n\t\t\t\t\t\t<Radio.Group\n\t\t\t\t\t\t\tdisabled={isNavTop}\n\t\t\t\t\t\t\tsize=\"small\" \n\t\t\t\t\t\t\tonChange={e => onNavStyleChange(e.target.value)} \n\t\t\t\t\t\t\tvalue={sideNavTheme}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Radio.Button value={SIDE_NAV_LIGHT}>Light</Radio.Button>\n\t\t\t\t\t\t\t<Radio.Button value={SIDE_NAV_DARK}>Dark</Radio.Button>\n\t\t\t\t\t\t</Radio.Group>\n\t\t\t\t\t}\n\t\t\t\t\tdisabled={isNavTop}\n\t\t\t\t/>\n\t\t\t\t<ListOption \n\t\t\t\t\tname=\"Side Nav Collapse:\"\n\t\t\t\t\tselector={\n\t\t\t\t\t\t<Switch \n\t\t\t\t\t\t\tdisabled={isNavTop} \n\t\t\t\t\t\t\tchecked={isCollapse} \n\t\t\t\t\t\t\tonChange={() => toggleCollapsedNav(!navCollapsed)} \n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t\tdisabled={isNavTop}\n\t\t\t\t/>\n\t\t\t\t<ListOption \n\t\t\t\t\tname=\"Dark Theme:\"\n\t\t\t\t\tselector={\n\t\t\t\t\t\t<Switch checked={currentTheme === 'dark'} onChange={toggleTheme} />\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"mb-5\">\n\t\t\t\t<h4 className=\"mb-3 font-weight-bold\">Locale</h4>\n\t\t\t\t<ListOption \n\t\t\t\t\tname=\"Language:\"\n\t\t\t\t\tselector={\n\t\t\t\t\t\t<NavLanguage configDisplay/>\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<CopyToClipboard\n\t\t\t\t\ttext={genCopySettingJson({ navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme})}\n\t\t\t\t\tonCopy={() => message.success('Copy Success, please paste it to src/configs/AppConfig.js THEME_CONFIG variable.') }\n\t\t\t\t>\n\t\t\t\t\t<Button icon={<CopyOutlined /> } block>\n\t\t\t\t\t\t<span>Copy Setting</span>\n\t\t\t\t\t</Button>\n\t\t\t\t</CopyToClipboard>\n\t\t\t</div>\n\t\t</>\n\t)\n}\n\nconst mapStateToProps = ({ theme }) => {\n  const { navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme } =  theme;\n  return { navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme }\n};\n\nconst mapDispatchToProps = {\n\ttoggleCollapsedNav,\n\tonNavTypeChange,\n\tonNavStyleChange,\n\tonTopNavColorChange,\n\tonHeaderNavColorChange,\n\tonSwitchTheme\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ThemeConfigurator)\n","import React, { Component } from 'react';\nimport { SettingOutlined } from '@ant-design/icons';\nimport { Drawer, Menu } from 'antd';\nimport ThemeConfigurator from './ThemeConfigurator';\nimport { connect } from \"react-redux\";\n\nexport class NavPanel extends Component {\n\tstate = { visible: false };\n\n  showDrawer = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  onClose = () => {\n    this.setState({\n      visible: false,\n    });\n\t};\n\t\n\trender() {\n\t\treturn (\n      <>\n        <Menu mode=\"horizontal\">\n          <Menu.Item onClick={this.showDrawer}>\n            <SettingOutlined className=\"nav-icon mr-0\" />\n          </Menu.Item>\n        </Menu>\n        <Drawer\n          title=\"Theme Config\"\n          placement=\"right\"\n          width={350}\n          onClose={this.onClose}\n          visible={this.state.visible}\n        >\n          <ThemeConfigurator/>\n        </Drawer>\n      </>\n    );\n\t}\n}\n\nconst mapStateToProps = ({ theme }) => {\n  const { locale } =  theme;\n  return { locale }\n};\n\nexport default connect(mapStateToProps)(NavPanel);","import React, { useState, useRef } from 'react';\nimport { \n\tDashboardOutlined,\n\tAppstoreOutlined,\n\tAntDesignOutlined,\n\tFileTextOutlined,\n\tSearchOutlined\n} from '@ant-design/icons';\nimport { Link } from \"react-router-dom\";\nimport { AutoComplete, Input } from 'antd';\nimport IntlMessage from 'components/util-components/IntlMessage';\nimport navigationConfig from \"configs/NavigationConfig\";\n\nfunction getOptionList (navigationTree, optionTree) {\n\toptionTree = optionTree ? optionTree : [];\n\tfor ( const navItem of navigationTree ) {\n\t\tif(navItem.submenu.length === 0) {\n\t\t\toptionTree.push(navItem)\n\t\t}\n\t\tif(navItem.submenu.length > 0) {\n\t\t\tgetOptionList(navItem.submenu, optionTree);\n\t\t}\n\t}\n\treturn optionTree \n}\n\nconst optionList = getOptionList(navigationConfig)\n\nconst getCategoryIcon = category => {\n\tswitch (category) {\n\t\tcase 'dashboards':\n\t\t\treturn <DashboardOutlined className=\"text-success\"/>;\n\t\tcase 'apps':\n\t\t\treturn <AppstoreOutlined className=\"text-danger\"/>;\n\t\tcase 'components':\n\t\t\treturn <AntDesignOutlined className=\"text-primary\"/>;\n\t\tcase 'extra':\n\t\t\treturn <FileTextOutlined className=\"text-warning\"/>;\n\t\tdefault:\n\t\t\treturn null;\n\t}\n}\n\nconst searchResult = () => optionList.map((item) => {\n\tconst category = item.key.split('-')[0]\n\treturn {\n\t\tvalue: item.path,\n\t\tlabel: (\n\t\t\t<Link to={item.path}>\n\t\t\t\t<div className=\"search-list-item\">\n\t\t\t\t\t<div className=\"icon\">\n\t\t\t\t\t\t{getCategoryIcon(category)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"font-weight-semibold\"><IntlMessage id={item.title} /></div>\n\t\t\t\t\t\t<div className=\"font-size-sm text-muted\">{category} </div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Link>\n\t\t),\n\t};\n});\n\nconst SearchInput = props => {\n\tconst { active, close, isMobile, mode } = props\n\tconst [value, setValue] = useState('');\n\tconst [options, setOptions] = useState([])\n\tconst inputRef = useRef(null);\n\n\tconst onSelect = () => {\n\t\tsetValue('')\n\t\tsetOptions([])\n\t\tif(close) {\n\t\t\tclose()\n\t\t}\n  };\n\n\tconst onSearch = searchText => {\n\t\tsetValue(searchText)\n\t\tsetOptions(!searchText ? [] : searchResult(searchText))\n\t};\n\t\n\tconst autofocus = () => {\n\t\tinputRef.current.focus();\n\t}\n\n\tif(active) {\n\t\tautofocus()\n\t}\n\n\treturn (\n\t\t<AutoComplete\n\t\t\tref={inputRef} \n\t\t\tclassName={`nav-search-input ${isMobile? 'is-mobile' : ''} ${mode === 'light' ? 'light' : ''}`}\n\t\t\tdropdownClassName=\"nav-search-dropdown\"\n\t\t\toptions={options}\n\t\t\tonSelect={onSelect}\n\t\t\tonSearch={onSearch}\n\t\t\tvalue={value}\n\t\t\tfilterOption={(inputValue, option) => \n\t\t\t\toption.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\n\t\t\t}\n\t\t>\n\t\t\t<Input placeholder=\"Search...\"  prefix={<SearchOutlined className=\"mr-0\" />} />\n\t\t</AutoComplete>\n\t)\n}\n\nexport default SearchInput\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport {\n\tCloseOutlined,\n} from '@ant-design/icons';\nimport utils from 'utils'\nimport SearchInput from './SearchInput';\n\nexport const NavSearch = (props) => {\n\tconst { active, close, headerNavColor } = props\n\tconst mode = utils.getColorContrast(headerNavColor)\n\n\treturn (\n\t\t<div className={`nav-search ${active ? 'nav-search-active' : ''} ${mode}`} style={{backgroundColor: headerNavColor}}>\n\t\t\t<div className=\"d-flex align-items-center w-100\">\n\t\t\t\t<SearchInput close={close} active={active}/>\n\t\t\t</div>\n\t\t\t<div className=\"nav-close\" onClick={close}>\n\t\t\t\t<CloseOutlined />\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nconst mapStateToProps = ({ theme }) => {\n  const { headerNavColor } =  theme;\n  return { headerNavColor }\n};\n\nexport default connect(mapStateToProps, {})(NavSearch)","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Layout } from \"antd\";\nimport { MenuFoldOutlined, MenuUnfoldOutlined } from '@ant-design/icons';\nimport Logo from './Logo';\nimport NavPanel from './NavPanel';\nimport NavSearch  from './NavSearch';\nimport { toggleCollapsedNav, onMobileNavToggle } from 'redux/actions/Theme';\nimport { NAV_TYPE_TOP, SIDE_NAV_COLLAPSED_WIDTH, SIDE_NAV_WIDTH } from 'constants/ThemeConstant';\nimport utils from 'utils'\n\nconst { Header } = Layout;\n\nexport const HeaderNav = props => {\n  const { navCollapsed, mobileNav, navType, headerNavColor, toggleCollapsedNav, onMobileNavToggle, isMobile, currentTheme } = props;\n  const [searchActive, setSearchActive] = useState(false)\n\n  const onSearchClose = () => {\n    setSearchActive(false)\n  }\n\n  const onToggle = () => {\n    if(!isMobile) {\n      toggleCollapsedNav(!navCollapsed)\n    } else {\n      onMobileNavToggle(!mobileNav)\n    }\n  }\n\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\n  const mode = ()=> {\n    if(!headerNavColor) {\n      return utils.getColorContrast(currentTheme === 'dark' ? '#00000' : '#ffffff' )\n    }\n    return utils.getColorContrast(headerNavColor)\n  }\n  const navMode = mode()\n  const getNavWidth = () => {\n    if(isNavTop || isMobile) {\n      return '0px'\n    }\n    if(navCollapsed) {\n      return `${SIDE_NAV_COLLAPSED_WIDTH}px`\n    } else {\n      return `${SIDE_NAV_WIDTH}px`\n    }\n  }\n\n  useEffect(() => {\n    if(!isMobile) {\n      onSearchClose()\n    }\n  })\n\n  return (\n    <Header className={`app-header ${navMode}`} style={{backgroundColor: headerNavColor}}>\n      <div className={`app-header-wrapper ${isNavTop ? 'layout-top-nav' : ''}`}>\n        <Logo logoType={navMode}/>\n        <div className=\"nav\" style={{width: `calc(100% - ${getNavWidth()})`}}>\n          <div className=\"nav-left\">\n            <ul className=\"ant-menu ant-menu-root ant-menu-horizontal\">          \n              {\n                isNavTop && !isMobile ?\n                null\n                :\n                <li className=\"ant-menu-item ant-menu-item-only-child\" onClick={() => {onToggle()}}>\n                  {navCollapsed || isMobile ? <MenuUnfoldOutlined className=\"nav-icon\" /> : <MenuFoldOutlined className=\"nav-icon\" />}\n                </li>\n              }\n            </ul>\n          </div>\n          <div className=\"nav-right\">\n            <NavPanel />\n          </div>\n          <NavSearch active={searchActive} close={onSearchClose}/>\n        </div>\n      </div>\n    </Header>\n  )\n}\n\nconst mapStateToProps = ({ theme }) => {\n  const { navCollapsed, navType, headerNavColor, mobileNav, currentTheme } =  theme;\n  return { navCollapsed, navType, headerNavColor, mobileNav, currentTheme }\n};\n\nexport default connect(mapStateToProps, {toggleCollapsedNav, onMobileNavToggle})(HeaderNav);","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Breadcrumb } from 'antd';\nimport navigationConfig from \"configs/NavigationConfig\";\nimport IntlMessage from 'components/util-components/IntlMessage';\n\nlet breadcrumbData = { \n\t'/app' : <IntlMessage id=\"home\" />\n};\n\nnavigationConfig.forEach((elm, i) => {\n\tconst assignBreadcrumb = (obj) => breadcrumbData[obj.path] = <IntlMessage id={obj.title} />;\n\tassignBreadcrumb(elm);\n\tif (elm.submenu) {\n\t\telm.submenu.forEach( elm => {\n\t\t\tassignBreadcrumb(elm)\n\t\t\tif(elm.submenu) {\n\t\t\t\telm.submenu.forEach( elm => {\n\t\t\t\t\tassignBreadcrumb(elm)\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t}\n})\n\nconst BreadcrumbRoute = withRouter(props => {\n\tconst { location } = props;\n\tconst pathSnippets = location.pathname.split('/').filter(i => i);\n\tconst buildBreadcrumb = pathSnippets.map((_, index) => {\n    const url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\n    return (\n      <Breadcrumb.Item key={url}>\n        <Link to={url}>{breadcrumbData[url]}</Link>\n      </Breadcrumb.Item>\n    );\n\t});\n  \n  return (\n\t\t<Breadcrumb>\n\t\t\t{buildBreadcrumb}\n\t\t</Breadcrumb>\n  );\n});\n\nexport class AppBreadcrumb extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<BreadcrumbRoute />\n\t\t)\n\t}\n}\n\nexport default AppBreadcrumb\n","import React from 'react'\nimport AppBreadcrumb from 'components/layout-components/AppBreadcrumb';\nimport IntlMessage from '../util-components/IntlMessage';\n\nexport const PageHeader = ({ title, display }) => {\n\treturn (\n\t\tdisplay ? (\n\t\t\t<div className=\"app-page-header\">\n\t\t\t\t<h3 className=\"mb-0 mr-3 font-weight-semibold\">\n\t\t\t\t\t<IntlMessage id={title? title : 'home'}/>\n\t\t\t\t</h3>\n\t\t\t\t<AppBreadcrumb />\n\t\t\t</div>\n\t\t)\n\t\t: null\n\t)\n}\n\nexport default PageHeader","import React from 'react'\nimport { APP_NAME } from 'configs/AppConfig';\n\nexport default function Footer() {\n\treturn (\n\t\t<footer className=\"footer\">\n\t\t\t<span>Copyright  &copy;  {`${new Date().getFullYear()}`} <span className=\"font-weight-semibold\">{`${APP_NAME}`}</span> All rights reserved.</span>\n\t\t</footer>\n\t)\n}\n\n","import React, { lazy, Suspense } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Loading from 'components/shared-components/Loading';\nimport { APP_PREFIX_PATH } from 'configs/AppConfig';\n\nexport const AppViews = () => {\n  return (\n    <Suspense fallback={<Loading cover='content' />}>\n      <Switch>\n        <Route path={`${APP_PREFIX_PATH}/home`} component={lazy(() => import(`./home`))} />\n        <Route path={`${APP_PREFIX_PATH}/pages`} component={lazy(() => import(`./pages`))} />\n        <Route path={`${APP_PREFIX_PATH}/apps`} component={lazy(() => import(`./apps`))} />\n        <Redirect from={`${APP_PREFIX_PATH}`} to={`${APP_PREFIX_PATH}/home`} />\n      </Switch>\n    </Suspense>\n  );\n};\n\nexport default React.memo(AppViews);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport SideNav from 'components/layout-components/SideNav';\nimport TopNav from 'components/layout-components/TopNav';\nimport Loading from 'components/shared-components/Loading';\nimport MobileNav from 'components/layout-components/MobileNav'\nimport HeaderNav from 'components/layout-components/HeaderNav';\nimport PageHeader from 'components/layout-components/PageHeader';\nimport Footer from 'components/layout-components/Footer';\nimport AppViews from 'views/app-views';\nimport {\n  Layout,\n  Grid,\n} from \"antd\";\n\nimport navigationConfig from \"configs/NavigationConfig\";\nimport { \n  SIDE_NAV_WIDTH, \n  SIDE_NAV_COLLAPSED_WIDTH,\n  NAV_TYPE_SIDE,\n  NAV_TYPE_TOP\n} from 'constants/ThemeConstant';\nimport utils from 'utils';\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\nconst { Content } = Layout;\nconst { useBreakpoint } = Grid;\n\nexport const AppLayout = ({ navCollapsed, navType, location }) => {\n  const currentRouteInfo = utils.getRouteInfo(navigationConfig, location.pathname)\n  const screens = utils.getBreakPoint(useBreakpoint());\n  const isMobile = !screens.includes('lg')\n  const isNavSide = navType === NAV_TYPE_SIDE\n  const isNavTop = navType === NAV_TYPE_TOP\n  const getLayoutGutter = () => {\n    if(isNavTop || isMobile) {\n      return 0\n    }\n    return navCollapsed ? SIDE_NAV_COLLAPSED_WIDTH : SIDE_NAV_WIDTH\n  }\n\n  const { status } = useThemeSwitcher();\n\n  if (status === 'loading') {\n    return <Loading cover=\"page\" />;\n  }\n\n  return (\n    <Layout>\n      <HeaderNav isMobile={isMobile}/>\n      {(isNavTop && !isMobile) ? <TopNav routeInfo={currentRouteInfo}/> : null}\n      <Layout className=\"app-container\">\n        {(isNavSide && !isMobile) ? <SideNav routeInfo={currentRouteInfo}/> : null }\n        <Layout className=\"app-layout\" style={{paddingLeft: getLayoutGutter()}}>\n          <div className={`app-content ${isNavTop ? 'layout-top-nav' : ''}`}>\n            <PageHeader display={currentRouteInfo?.breadcrumb} title={currentRouteInfo?.title} />\n            <Content>\n              <AppViews />\n            </Content>\n          </div>\n          <Footer />\n        </Layout>\n      </Layout>\n      {isMobile && <MobileNav />}\n    </Layout>\n  )\n}\n\nconst mapStateToProps = ({ theme }) => {\n  const { navCollapsed, navType, locale } =  theme;\n  return { navCollapsed, navType, locale }\n};\n\nexport default connect(mapStateToProps)(React.memo(AppLayout));","import React, { lazy, Suspense } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Loading from 'components/shared-components/Loading';\nimport { AUTH_PREFIX_PATH } from 'configs/AppConfig'\n\nexport const AppViews = () => {\n  return (\n    <Suspense fallback={<Loading cover=\"page\"/>}>\n      <Switch>\n        <Route path={`${AUTH_PREFIX_PATH}/login`} component={lazy(() => import(`./authentication/login`))} />\n        <Route path={`${AUTH_PREFIX_PATH}/login-1`} component={lazy(() => import(`./authentication/login-1`))} />\n        <Route path={`${AUTH_PREFIX_PATH}/login-2`} component={lazy(() => import(`./authentication/login-2`))} />\n        <Route path={`${AUTH_PREFIX_PATH}/register-1`} component={lazy(() => import(`./authentication/register-1`))} />\n        <Route path={`${AUTH_PREFIX_PATH}/register-2`} component={lazy(() => import(`./authentication/register-2`))} />\n        <Route path={`${AUTH_PREFIX_PATH}/forgot-password`} component={lazy(() => import(`./authentication/forgot-password`))} />\n        <Route path={`${AUTH_PREFIX_PATH}/error-1`} component={lazy(() => import(`./errors/error-page-1`))} />\n        <Route path={`${AUTH_PREFIX_PATH}/error-2`} component={lazy(() => import(`./errors/error-page-2`))} />\n        <Redirect from={`${AUTH_PREFIX_PATH}`} to={`${AUTH_PREFIX_PATH}/login`} />\n      </Switch>\n    </Suspense>\n  )\n}\n\nexport default AppViews;\n\n","import React from 'react'\nimport { Switch, Route, } from \"react-router-dom\";\nimport AuthViews from 'views/auth-views'\n\nexport const AuthLayout = () => {\n\treturn (\n\t\t<div className=\"auth-container\">\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"\" component={AuthViews} />\n\t\t\t</Switch>\n\t\t</div>\n\t)\n}\n\n\nexport default AuthLayout\n","import antdEnUS from 'antd/es/locale/en_US';\nimport enMsg from \"../locales/en_US.json\";\n\nconst EnLang = {\n  antd: antdEnUS,\n  locale: 'en-US',\n  messages: {\n    ...enMsg\n  },\n};\nexport default EnLang;\n","import antdZhCn from 'antd/es/locale/zh_CN';\nimport zhMsg from \"../locales/zh_CN.json\";\n\nconst ZhLang = {\n  antd: antdZhCn,\n  locale: 'zh',\n  messages: {\n    ...zhMsg\n  },\n};\nexport default ZhLang;\n","import antdFrFR from 'antd/es/locale/fr_FR';\nimport frMsg from \"../locales/fr_FR.json\";\n\nconst FrLang = {\n  antd: antdFrFR,\n  locale: 'fr-FR',\n  messages: {\n    ...frMsg\n  },\n};\nexport default FrLang;\n","import enLang from './entries/en_US';\nimport zhLang from './entries/zh_CN';\nimport frLang from './entries/fr_FR';\nimport jaLang from './entries/ja_JP'\n\nconst AppLocale = {\n    en: enLang,\n    zh: zhLang,\n    fr: frLang,\n    ja: jaLang\n};\n\nexport default AppLocale;","import antdJaJP from 'antd/es/locale/ja_JP';\nimport jaMsg from \"../locales/ja_JP.json\";\n\nconst JaLang = {\n  antd: antdJaJP,\n  locale: 'ja-JP',\n  messages: {\n    ...jaMsg\n  },\n};\nexport default JaLang;\n","import React from \"react\";\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport AppLayout from \"layouts/app-layout\";\nimport AuthLayout from 'layouts/auth-layout';\nimport AppLocale from \"lang\";\nimport { IntlProvider } from \"react-intl\";\nimport { ConfigProvider } from 'antd';\nimport { APP_PREFIX_PATH, AUTH_PREFIX_PATH } from 'configs/AppConfig'\n\nexport const Views = (props) => {\n  const { locale, location } = props;\n  const currentAppLocale = AppLocale[locale];\n  return (\n    <IntlProvider\n      locale={currentAppLocale.locale}\n      messages={currentAppLocale.messages}>\n      <ConfigProvider locale={currentAppLocale.antd}>\n        <Switch>\n          <Route exact path=\"/\">\n            <Redirect to={APP_PREFIX_PATH} />\n          </Route>\n          <Route path={AUTH_PREFIX_PATH}>\n            <AuthLayout />\n          </Route>\n          <Route path={APP_PREFIX_PATH}>\n            <AppLayout location={location}/>\n          </Route>\n        </Switch>\n      </ConfigProvider>\n    </IntlProvider>\n  )\n}\n\nconst mapStateToProps = ({ theme, auth }) => {\n  const { locale } =  theme;\n  const { token } = auth;\n  return { locale, token }\n};\n\nexport default withRouter(connect(mapStateToProps)(Views));","import { ThemeSwitcherProvider } from 'react-css-theme-switcher';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { THEME_CONFIG } from './configs/AppConfig';\nimport store from './redux/store';\nimport Views from './views';\n\nconst themes = {\n  dark: `${process.env.PUBLIC_URL}/css/dark-theme.css`,\n  light: `${process.env.PUBLIC_URL}/css/light-theme.css`,\n};\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Provider store={store}>\n        <ThemeSwitcherProvider\n          themeMap={themes}\n          defaultTheme={THEME_CONFIG.currentTheme}\n          insertionPoint='styles-insertion-point'\n        >\n          <Router>\n            <Switch>\n              <Route path='/' component={Views} />\n            </Switch>\n          </Router>\n        </ThemeSwitcherProvider>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {\n  SIGNIN,\n  AUTHENTICATED,\n  SIGNOUT,\n  SIGNOUT_SUCCESS,\n  SHOW_AUTH_MESSAGE,\n  HIDE_AUTH_MESSAGE,\n  SIGNUP,\n  SIGNUP_SUCCESS,\n  SHOW_LOADING,\n  SIGNIN_WITH_GOOGLE,\n  SIGNIN_WITH_GOOGLE_AUTHENTICATED,\n  SIGNIN_WITH_FACEBOOK,\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED\n} from '../constants/Auth';\n\nexport const signIn = (user) => {\n  return {\n    type: SIGNIN,\n    payload: user\n  }\n};\n\nexport const authenticated = (token) => {\n  return {\n    type: AUTHENTICATED,\n    token\n  }\n};\n\nexport const signOut = () => {\n  return {\n    type: SIGNOUT\n  };\n};\n\nexport const signOutSuccess = () => {\n  return {\n    type: SIGNOUT_SUCCESS,\n  }\n};\n\nexport const signUp = (user) => {\n  return {\n    type: SIGNUP,\n    payload: user\n  };\n};\n\nexport const signUpSuccess = (token) => {\n  return {\n    type: SIGNUP_SUCCESS,\n    token\n  };\n};\n\nexport const signInWithGoogle = () => {\n  return {\n    type: SIGNIN_WITH_GOOGLE\n  };\n};\n\nexport const signInWithGoogleAuthenticated = (token) => {\n  return {\n    type: SIGNIN_WITH_GOOGLE_AUTHENTICATED,\n    token\n  };\n};\n\nexport const signInWithFacebook = () => {\n  return {\n    type: SIGNIN_WITH_FACEBOOK\n  };\n};\n\nexport const signInWithFacebookAuthenticated = (token) => {\n  return {\n    type: SIGNIN_WITH_FACEBOOK_AUTHENTICATED,\n    token\n  };\n};\n\nexport const showAuthMessage = (message) => {\n  return {\n    type: SHOW_AUTH_MESSAGE,\n    message\n  };\n};\n\nexport const hideAuthMessage = () => {\n  return {\n    type: HIDE_AUTH_MESSAGE,\n  };\n};\n\nexport const showLoading = () => {\n  return {\n    type: SHOW_LOADING,\n  };\n};\n","export const CLIENTS_REQUESTED = 'clients/CLIENTS_REQUESTED';\nexport const CLIENTS_RECEIVED = 'clients/CLIENTS_RECEIVED';\nexport const CLIENTS_REQUESTED_FAILED = 'clients/CLIENTS_REQUESTED_FAILED';\nexport const CLIENT_UPDATED = 'clients/CLIENT_UPDATED';\nexport const CLIENT_DELETED = 'clients/CLIENTS_DELETED';\n"],"sourceRoot":""}