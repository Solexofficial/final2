{"version":3,"sources":["redux/selectors/Clients.js","views/app-views/pages/client-list/ClientEditProfile.js","components/shared-components/AvatarStatus/index.js","views/app-views/pages/client-list/ClientsTable.js","views/app-views/pages/client-list/index.js"],"names":["getClientsList","state","clients","entities","getClientsLoadingStatus","isLoading","getClientsRequestErrorMessage","error","ClientEditProfile","clientId","id","currentClient","useSelector","find","client","history","useHistory","dispatch","useDispatch","initialData","name","email","username","phone","companyName","company","website","street","address","suite","city","postcode","zipcode","className","layout","initialValues","onFinish","values","key","payload","message","loading","content","setTimeout","console","log","updateClient","success","duration","goBack","onFinishFailed","errorInfo","xs","sm","md","lg","gutter","ROW_GUTTER","Item","label","rules","required","type","htmlType","renderAvatar","props","text","AvatarStatus","suffix","subTitle","src","icon","size","shape","gap","onNameClick","onClick","ClientsTable","onDelete","onEdit","tableColumns","title","dataIndex","render","_","record","UserOutlined","sorter","compare","a","b","toLowerCase","responsive","elm","EditOutlined","danger","DeleteOutlined","columns","dataSource","rowKey","ClientList","match","useParams","errorMessage","useEffect","fetchingClients","spinning","bodyStyle","padding","deleteClient","push","url"],"mappings":"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","file":"static/js/19.6aca8e2a.chunk.js","sourcesContent":["export const getClientsList = state => state.clients.entities;\nexport const getClientsLoadingStatus = state => state.clients.isLoading;\nexport const getClientsRequestErrorMessage = state => state.clients.error;\nexport const getClientById = clientId => state => {\n  if (state.clients.entities) {\n    return state.clients.entities.find(client => client.id === +clientId);\n  }\n};\n","import { Button, Col, Form, Input, message, Row } from 'antd';\nimport { ROW_GUTTER } from 'constants/ThemeConstant';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { updateClient } from 'redux/actions/Clients';\nimport { getClientById } from 'redux/selectors/Clients';\n\nconst ClientEditProfile = ({ id }) => {\n  const currentClient = useSelector(getClientById(id));\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const initialData = {\n    name: '' || currentClient?.name,\n    email: '' || currentClient?.email,\n    username: '' || currentClient?.username,\n    phone: '' || currentClient?.phone,\n    companyName: '' || currentClient?.company?.name,\n    website: '' || currentClient?.website,\n    street: '' || currentClient?.address?.street,\n    suite: '' || currentClient?.address?.suite,\n    city: '' || currentClient?.address?.city,\n    postcode: '' || currentClient?.address?.zipcode,\n  };\n\n  const onFinish = values => {\n    const key = 'updatable';\n    const payload = {\n      ...currentClient,\n      name: values.name,\n      email: values.email,\n      username: values.username,\n      phone: values.phone,\n      website: values.website,\n      company: {\n        ...currentClient.company,\n        name: values.companyName,\n      },\n      address: {\n        ...currentClient.address,\n        street: values.street,\n        city: values.city,\n        zipcode: values.postcode,\n      },\n    };\n    message.loading({ content: 'Updating...', key });\n    setTimeout(() => {\n      console.log('Sending data: ', payload);\n      dispatch(updateClient(payload));\n      message.success({ content: 'Done! Check data in console', key, duration: 2 });\n\n      setTimeout(() => {\n        history.goBack();\n      }, 1000);\n    }, 1000);\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  if (!currentClient) {\n    setTimeout(() => {\n      history.goBack();\n    }, 2000);\n    return message.error({ content: `Client with id ${id} was not found`, duration: 2 });\n  }\n  return (\n    <div className='mt-4 p-3'>\n      <Form\n        name='basicInformation'\n        layout='vertical'\n        initialValues={initialData}\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n      >\n        <Row>\n          <Col xs={24} sm={24} md={24} lg={24}>\n            <Row gutter={ROW_GUTTER}>\n              <Col xs={24} sm={24} md={24}>\n                <Form.Item\n                  label='Name'\n                  name='name'\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input your name!',\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n              </Col>\n              <Col xs={24} sm={24} md={12}>\n                <Form.Item\n                  label='Username'\n                  name='username'\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input your username!',\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n              </Col>\n              <Col xs={24} sm={24} md={12}>\n                <Form.Item\n                  label='Email'\n                  name='email'\n                  rules={[\n                    {\n                      required: true,\n                      type: 'email',\n                      message: 'Please enter a valid email!',\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n              </Col>\n\n              <Col xs={24} sm={24} md={12}>\n                <Form.Item label='Company name' name='companyName'>\n                  <Input />\n                </Form.Item>\n              </Col>\n              <Col xs={24} sm={24} md={12}>\n                <Form.Item label='Phone Number' name='phone'>\n                  <Input />\n                </Form.Item>\n              </Col>\n              <Col xs={24} sm={24} md={24}>\n                <Form.Item label='Website' name='website'>\n                  <Input />\n                </Form.Item>\n              </Col>\n              <Col xs={24} sm={24} md={12}>\n                <Form.Item label='Street' name='street'>\n                  <Input />\n                </Form.Item>\n              </Col>\n              <Col xs={24} sm={24} md={12}>\n                <Form.Item label='Suite' name='suite'>\n                  <Input />\n                </Form.Item>\n              </Col>\n              <Col xs={24} sm={24} md={12}>\n                <Form.Item label='City' name='city'>\n                  <Input />\n                </Form.Item>\n              </Col>\n              <Col xs={24} sm={24} md={12}>\n                <Form.Item label='Post code' name='postcode'>\n                  <Input />\n                </Form.Item>\n              </Col>\n            </Row>\n            <Button type='primary' htmlType='submit'>\n              Save Change\n            </Button>\n          </Col>\n        </Row>\n      </Form>\n    </div>\n  );\n};\n\nexport default ClientEditProfile;\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport { Avatar } from 'antd';\n\nconst renderAvatar = props => {\n\treturn <Avatar {...props} className={`ant-avatar-${props.type}`}>{props.text}</Avatar>;\n}\n\nexport const AvatarStatus = props => {\n\tconst { name, suffix, subTitle, id, type, src, icon, size, shape, gap, text, onNameClick } = props\n\treturn (\n\t\t<div className=\"avatar-status d-flex align-items-center\">\n\t\t\t{renderAvatar({icon, src, type, size, shape, gap, text })}\n\t\t\t<div className=\"ml-2\">\n\t\t\t\t<div>\n\t\t\t\t\t{\n\t\t\t\t\t\tonNameClick ? \n\t\t\t\t\t\t<div onClick={() => onNameClick({name, subTitle, src, id})} className=\"avatar-status-name clickable\">{name}</div> \n\t\t\t\t\t\t:\n\t\t\t\t\t\t<div className=\"avatar-status-name\">{name}</div>\n\t\t\t\t\t}\n\t\t\t\t\t<span>{suffix}</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"text-muted avatar-status-subtitle\">{subTitle}</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nAvatarStatus.propTypes = {\n\tname: PropTypes.string,\n\tsrc: PropTypes.string,\n\ttype: PropTypes.string,\n\tonNameClick: PropTypes.func\n}\n\n\nexport default AvatarStatus;\n","import React from 'react';\nimport { DeleteOutlined, EditOutlined, UserOutlined } from '@ant-design/icons';\nimport { Button, Table, Tooltip } from 'antd';\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\n\nconst ClientsTable = ({ clients, onDelete, onEdit }) => {\n  const tableColumns = [\n    {\n      title: 'Client',\n      dataIndex: 'name',\n      render: (_, record) => (\n        <div className='d-flex'>\n          <AvatarStatus name={record.username} subTitle={record.name} icon={<UserOutlined />} />\n        </div>\n      ),\n      sorter: {\n        compare: (a, b) => {\n          a = a.username.toLowerCase();\n          b = b.username.toLowerCase();\n          return a < b ? -1 : a > b ? 1 : 0;\n        },\n      },\n    },\n    {\n      title: 'Email',\n      dataIndex: 'email',\n      responsive: ['xl', 'xxl', 'lg', 'md', 'sm'],\n      sorter: {\n        compare: (a, b) => {\n          a = a.email.toLowerCase();\n          b = b.email.toLowerCase();\n          return a > b ? -1 : b > a ? 1 : 0;\n        },\n      },\n    },\n    {\n      title: 'Phone',\n      dataIndex: 'phone',\n      responsive: ['xl', 'xxl', 'lg', 'md'],\n    },\n    {\n      title: 'Website',\n      dataIndex: 'website',\n      responsive: ['xl', 'xxl'],\n    },\n    {\n      title: 'City',\n      dataIndex: 'address',\n      responsive: ['xl', 'xxl'],\n      render: address => <span>{address.city} </span>,\n    },\n    {\n      title: 'Street',\n      dataIndex: 'address',\n      responsive: ['xl', 'xxl'],\n      render: address => <span>{address.street} </span>,\n    },\n    {\n      title: 'Company name',\n      dataIndex: 'company',\n      responsive: ['xxl'],\n      render: company => <span>{company.name} </span>,\n    },\n\n    {\n      title: '',\n      dataIndex: 'actions',\n      render: (_, elm) => (\n        <div className='text-right'>\n          <Tooltip title='Edit'>\n            <Button\n              type='primary'\n              className='mr-2'\n              icon={<EditOutlined />}\n              onClick={() => onEdit(elm.id)}\n              size='small'\n            />\n          </Tooltip>\n          <Tooltip title='Delete'>\n            <Button\n              danger\n              icon={<DeleteOutlined />}\n              onClick={() => {\n                onDelete(elm.id);\n              }}\n              size='small'\n            />\n          </Tooltip>\n        </div>\n      ),\n    },\n  ];\n  return <Table columns={tableColumns} dataSource={clients} rowKey='id' />;\n};\n\nexport default ClientsTable;\n","import { Card, message, Spin } from 'antd';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { deleteClient, fetchingClients } from 'redux/actions/Clients';\nimport { getClientsList, getClientsLoadingStatus, getClientsRequestErrorMessage } from 'redux/selectors/Clients';\nimport ClientEditProfile from './ClientEditProfile';\nimport ClientsTable from './ClientsTable';\n\nexport const ClientList = ({ match }) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { clientId } = useParams();\n\n  const clients = useSelector(getClientsList);\n  const isLoading = useSelector(getClientsLoadingStatus);\n  const errorMessage = useSelector(getClientsRequestErrorMessage);\n\n  useEffect(() => {\n    dispatch(fetchingClients());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (errorMessage) {\n      message.error({ content: `${errorMessage}`, duration: 3 });\n    }\n  }, [errorMessage]);\n\n  const handleClientDelete = clientId => {\n    dispatch(deleteClient(clientId));\n    message.success({ content: `Deleted user ${clientId}`, duration: 2 });\n  };\n\n  const handleEditClientProfile = clientId => {\n    history.push(`${match.url}/${clientId}`);\n  };\n\n  return (\n    <>\n      <Spin size='large' spinning={isLoading}>\n        <Card bodyStyle={{ padding: '0px' }}>\n          {!isLoading &&\n            (clientId ? (\n              <ClientEditProfile id={clientId} />\n            ) : (\n              <ClientsTable clients={clients} onDelete={handleClientDelete} onEdit={handleEditClientProfile} />\n            ))}\n        </Card>\n      </Spin>\n    </>\n  );\n};\n\nexport default ClientList;\n"],"sourceRoot":""}